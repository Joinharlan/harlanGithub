<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Obj\THM3100_MNT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Obj\THM3100_MNT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Wed Oct 23 09:42:01 2019
<BR><P>
<H3>Maximum Stack Usage =      22448 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MianMenu &rArr; OtherMenu &rArr; TRANS_Void &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[27f]">OnlinePINProcessing</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">cEmvLib_GetHolderPwd</a><BR>
 <LI><a href="#[280]">OnlinePINProcessing_EC</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">cEmvLib_GetHolderPwd</a><BR>
 <LI><a href="#[21c]">GetTLVItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21c]">GetTLVItem</a><BR>
 <LI><a href="#[1f9]">LCD_Display</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f9]">LCD_Display</a><BR>
 <LI><a href="#[1c]">qsort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">qsort</a><BR>
 <LI><a href="#[285]">OperRegisterFuntion</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">TRANS_Logon</a><BR>
 <LI><a href="#[143]">TMS_Management_Menu</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[264]">TRANS_Batch</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">Compare</a> from appselect.o(i.Compare) referenced from entry.o(i.Contactless_GetHighestPriority)
 <LI><a href="#[3]">Compare</a> from appselect.o(i.Compare) referenced from appselect.o(i.FinalSelect)
 <LI><a href="#[3]">Compare</a> from appselect.o(i.Compare) referenced from appselect.o(i.FinalSelectForLog)
 <LI><a href="#[5]">SaveAppParamItem</a> from emvproc.o(i.SaveAppParamItem) referenced from emvproc.o(i.DownLoadEmvParam)
 <LI><a href="#[12]">SaveCapkInfoItem</a> from emvproc.o(i.SaveCapkInfoItem) referenced from emvproc.o(i.QueryEmvCapk)
 <LI><a href="#[4]">SaveEmvCapkItem</a> from emvproc.o(i.SaveEmvCapkItem) referenced from emvproc.o(i.DownLoadCAPK)
 <LI><a href="#[4]">SaveEmvCapkItem</a> from emvproc.o(i.SaveEmvCapkItem) referenced from emvproc.o(i.OnlineLoadMk)
 <LI><a href="#[13]">SaveOneAid</a> from emvproc.o(i.SaveOneAid) referenced from emvproc.o(i.QueryEmvParam)
 <LI><a href="#[16]">SaveRspICCData</a> from emvif.o(i.SaveRspICCData) referenced from emvif.o(i.cEmvLib_OnlineProc)
 <LI><a href="#[1]">V32P_StartUp</a> from dll.o(i.V32P_StartUp) referenced from startup_mps_cm0.o(STARTUP)
 <LI><a href="#[15]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[14]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[14]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[a]">cEmvLib_AdviceProc</a> from emvif.o(i.cEmvLib_AdviceProc) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[6]">cEmvLib_GetDateTime</a> from emvif.o(i.cEmvLib_GetDateTime) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[d]">cEmvLib_GetHolderOfflinePwd</a> from emvif.o(i.cEmvLib_GetHolderOfflinePwd) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[c]">cEmvLib_GetHolderPwd</a> from emvif.o(i.cEmvLib_GetHolderPwd) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[7]">cEmvLib_GetUnknowTLV</a> from emvif.o(i.cEmvLib_GetUnknowTLV) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[9]">cEmvLib_InputAmt</a> from emvif.o(i.cEmvLib_InputAmt) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[8]">cEmvLib_IoCtrl</a> from emvif.o(i.cEmvLib_IoCtrl) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[11]">cEmvLib_OnlineProc</a> from emvif.o(i.cEmvLib_OnlineProc) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[e]">cEmvLib_ReferProc</a> from emvif.o(i.cEmvLib_ReferProc) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[b]">cEmvLib_VerifyCert</a> from emvif.o(i.cEmvLib_VerifyCert) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[10]">cEmvLib_VerifyPINOK</a> from emvif.o(i.cEmvLib_VerifyPINOK) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[f]">cEmvLib_WaitAppSel</a> from emvif.o(i.cEmvLib_WaitAppSel) referenced from emvif.o(i.EmvFuncInit)
 <LI><a href="#[2]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[17]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;V32P_StartUp
</UL>

<P><STRONG><a name="[3a4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[18]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3a6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[3a7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[3a8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3a9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[3aa]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex_to_Bcd
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_IntToBcd
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField56
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bytetobcd
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dat_bintobcd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bintobcd
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenRandValue
</UL>

<P><STRONG><a name="[3ab]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dat_bintobcd
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckDate
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bintobcd
</UL>

<P><STRONG><a name="[1c]"></a>qsort</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, qsort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = qsort &rArr;  qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_GetHighestPriority
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>

<P><STRONG><a name="[3ac]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBankName
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintSweepCodeTicket
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddCapk
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetParam
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathcRefundProc
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond56
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField63
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField62
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField61
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField60
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField56
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField46
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583MsgID
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583Field
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryOperIDCnt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperInfor
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperInfor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardFromTrack
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTermCapForApp
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetScriptResult
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTLVString
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRspICCData
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetParam
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOneAid
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvCapkItem
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCapkInfoItem
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenMKAndEnc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdToBin
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsExistEcSupportIndicator
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillADFEntry
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDataLen
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteFromtSortAppList
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_SetParameter
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_Inquiry
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBER_TLVByTag
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGetProcOp
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGenAC
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetChallenge
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_update
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckAllSFI
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_GetHighestPriority
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SetTransData
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_DelCurCandApp
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongToDec
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection71
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection2
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemSafety
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemInfor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDirectorInfor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init88OperInfor
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing_EC
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenIssuerResult
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectSendToCard
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateScript
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvData
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[342]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[3ad]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[3ae]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3af]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3b0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_InitAppList
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_SetParameter
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ClearALLTLVData
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenIssuerResult
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog2
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog1
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalAuthVoidTrade
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection16
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldReference
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreeSign
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField62
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField56
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryOperIDCnt
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPDU2SetFuntion
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EcAppQue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_InputAmt
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispLog
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenMKAndEnc
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_Inquiry
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_Crc_Calculate
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection9
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection8
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection71
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection7
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection5
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection2
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection172
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection171
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection15
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection14
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection13
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection12
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection10
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
</UL>

<P><STRONG><a name="[3b1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[23e]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[8c]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[8d]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[45]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8ToGBK
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTailChars
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubShowTitle
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardFromTrack
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongToDec
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[26b]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatchTrack2AndPan
</UL>

<P><STRONG><a name="[40]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBankName
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond56
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField60
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIssuerName
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTermCapForApp
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterTranProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_InitCAPKList
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsExistEcSupportIndicator
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_OnlineProcessing
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_Inquiry
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGetProcOp
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGenAC
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetChallenge
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection4
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
</UL>

<P><STRONG><a name="[7c]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdAmount
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsExistEcSupportIndicator
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSFI
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillADFEntry
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckICTI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalAndCardActionAnalysis
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_OnlineProcessing
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_SetParameter
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ClearALLTLVData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStaticData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINData
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDynamicData
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTagLen
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DolGetByTag
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__QPboc_CardAuth
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckAllSFI
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SetTransData
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_GetCvmType
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_CardAuth
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignatureProcessing
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAmountUl
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing_EC
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>

<P><STRONG><a name="[3b2]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[3b3]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDDFADFEntry
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearADFEntry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_SetParameter
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ClearALLTLVData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGetProcOp
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGenAC
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_ClearADFEntry
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SetTransData
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing_EC
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenIssuerResult
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>

<P><STRONG><a name="[3b4]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[3b5]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreeSign
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583Field
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[23]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583MsgID
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[24]"></a>atoll</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atoll &rArr; __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_ul2d</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dfltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ul2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3b6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3b7]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[25]"></a>__strtoll</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, __strtoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
</UL>

<P><STRONG><a name="[3b8]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[29]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[38d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[19]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3b9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3ba]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[34]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[35]"></a>_strtoull</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, _strtoull.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
</UL>

<P><STRONG><a name="[3bb]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[3bc]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3bd]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>AddBatch</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, p8583_trade.o(i.AddBatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AddBatch &rArr; GetCurrentBatchNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentBatchNum
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentBatchNum
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
</UL>

<P><STRONG><a name="[2a6]"></a>AddBitmapField</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, p8583_proc.o(i.AddBitmapField))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddBitmapField
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
</UL>

<P><STRONG><a name="[3e]"></a>AddCandidateList</STRONG> (Thumb, 544 bytes, Stack size 88 bytes, appselect.o(i.AddCandidateList))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = AddCandidateList &rArr; EmvLib_GetApp &rArr; GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckICTI
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
</UL>

<P><STRONG><a name="[46]"></a>AddOperFuntion</STRONG> (Thumb, 334 bytes, Stack size 96 bytes, loginfun.o(i.AddOperFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = AddOperFuntion &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[4b]"></a>AddOperInfor</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, flash_oper.o(i.AddOperInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AddOperInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[50]"></a>AddTraceNo</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, p8583_trade.o(i.AddTraceNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AddTraceNo &rArr; SaveCurrentTraceNo &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTraceNo
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[53]"></a>AdjExitReversal</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, p8583_assist.o(i.AdjExitReversal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AdjExitReversal &rArr; GetReverseInfor &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReverseInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[55]"></a>AdjMACLogin</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, p8583_trade.o(i.AdjMACLogin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20304<LI>Call Chain = AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineDownOrUp
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[5a]"></a>AfterTranProc</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, emvinsertcard.o(i.AfterTranProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AfterTranProc &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[5b]"></a>AllSeparateBER_TLV</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, emvpublic.o(i.AllSeparateBER_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AllSeparateBER_TLV &rArr; NoConstructAllSeparateBER_TLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
</UL>

<P><STRONG><a name="[5d]"></a>AnalysePSEDir</STRONG> (Thumb, 650 bytes, Stack size 1136 bytes, appselect.o(i.AnalysePSEDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 2728<LI>Call Chain = AnalysePSEDir &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTLVSeparate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSFI
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillADFEntry
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartSelect
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDDFADFEntry
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[66]"></a>Api_AscToBcd</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, dev_math.o(i.Api_AscToBcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Api_AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tohex
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObtTimeData
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubAsc2Bcd
</UL>

<P><STRONG><a name="[1c9]"></a>Api_BcdToAsc</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, dev_math.o(i.Api_BcdToAsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Api_BcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField63
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583MsgID
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583Field
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubBcd2Asc
</UL>

<P><STRONG><a name="[34e]"></a>Api_CheckDate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, p8583_assist.o(i.Api_CheckDate))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
</UL>

<P><STRONG><a name="[34f]"></a>Api_CheckTime</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, p8583_assist.o(i.Api_CheckTime))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
</UL>

<P><STRONG><a name="[34d]"></a>Api_CheckYear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, p8583_assist.o(i.Api_CheckYear))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
</UL>

<P><STRONG><a name="[68]"></a>Api_Check_Print_Staut</STRONG> (Thumb, 564 bytes, Stack size 40 bytes, appapi.o(i.Api_Check_Print_Staut))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Api_Check_Print_Staut &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_BattVol
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
</UL>

<P><STRONG><a name="[6f]"></a>Api_DStandbyScreen</STRONG> (Thumb, 372 bytes, Stack size 160 bytes, appapi.o(i.Api_DStandbyScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 15608<LI>Call Chain = Api_DStandbyScreen &rArr; DispLog &rArr; Lib_ScrDrawLogoxy
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagClose
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispLog
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>Api_DispString</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, emvport.o(i.Api_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = Api_DispString &rArr; Lib_ScrPrintf &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrGotoxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrFontSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrAttrSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
</UL>

<P><STRONG><a name="[7d]"></a>Api_IntToBcd</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, dev_math.o(i.Api_IntToBcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Api_IntToBcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[48]"></a>Api_KbInputFuntion</STRONG> (Thumb, 474 bytes, Stack size 64 bytes, appapi.o(i.Api_KbInputFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbInputFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldReference
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermPassWordCheck
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermParFuntion
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[82]"></a>Api_KbInputFuntionHz</STRONG> (Thumb, 492 bytes, Stack size 328 bytes, appapi.o(i.Api_KbInputFuntionHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbInputFuntionHz
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPDU2SetFuntion
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[85]"></a>Api_SavePBOCDefaultPara</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, appapi.o(i.Api_SavePBOCDefaultPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016<LI>Call Chain = Api_SavePBOCDefaultPara &rArr; SavePBOCDefaultPara &rArr; SaveInitEmvParam &rArr; DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBOCDefaultPara
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[87]"></a>Api_StandbyBrushCard</STRONG> (Thumb, 484 bytes, Stack size 440 bytes, tradeassistfun.o(i.Api_StandbyBrushCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = Api_StandbyBrushCard &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagReset
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagRead
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[8f]"></a>Api_WaitKey</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvport.o(i.Api_WaitKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Api_WaitKey &rArr; WaitUserAckAndRet &rArr; Lib_TimerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_clss_err
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
</UL>

<P><STRONG><a name="[196]"></a>Api_check_number_key</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, appapi.o(i.Api_check_number_key))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
</UL>

<P><STRONG><a name="[91]"></a>Api_flash_init</STRONG> (Thumb, 1032 bytes, Stack size 16 bytes, flash_oper.o(i.Api_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 6200<LI>Call Chain = Api_flash_init &rArr; ResetflashSection1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardCapkRecordAll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidRecordAll
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidListRecordAll
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection16
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SystemTimeInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IFlashInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection9
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection8
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection71
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection7
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection5
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection2
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection172
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection171
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection15
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection14
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection13
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection12
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection10
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteErrorWarn
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>AppMoveToTerminal</STRONG> (Thumb, 274 bytes, Stack size 120 bytes, appselect.o(i.AppMoveToTerminal))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = AppMoveToTerminal &rArr; EmvLib_GetApp &rArr; GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_SetParameter
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dat_ultohex
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[360]"></a>ArrayToU32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tms.o(i.ArrayToU32))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[258]"></a>AscToBcd</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, dev_math.o(i.AscToBcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AscToBcd
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvCapkItem
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCapkInfoItem
</UL>

<P><STRONG><a name="[49]"></a>AsciiStrToBcd</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, dev_math.o(i.AsciiStrToBcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AsciiStrToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tohex
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[ae]"></a>AsciiStrToBcd2</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, emvrsa.o(i.AsciiStrToBcd2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AsciiStrToBcd2
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tohex
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
</UL>

<P><STRONG><a name="[af]"></a>BathcRefundProc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, p8583_trade.o(i.BathcRefundProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 3960<LI>Call Chain = BathcRefundProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
</UL>

<P><STRONG><a name="[b2]"></a>BcdToAsc</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, dev_math.o(i.BcdToAsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsc0
</UL>

<P><STRONG><a name="[b1]"></a>BcdToAsc0</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, emvport.o(i.BcdToAsc0))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BcdToAsc0 &rArr; BcdToAsc
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
</UL>

<P><STRONG><a name="[b3]"></a>BcdToAsciiString</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, dev_math.o(i.BcdToAsciiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BcdToAsciiString
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toasc
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField48
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
</UL>

<P><STRONG><a name="[b5]"></a>BcdToHex</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, dev_math.o(i.BcdToHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BcdToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tohex
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
</UL>

<P><STRONG><a name="[4a]"></a>Bcd_to_Hex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dev_math.o(i.Bcd_to_Hex))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperInfor
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
</UL>

<P><STRONG><a name="[b6]"></a>BuildTDOL</STRONG> (Thumb, 364 bytes, Stack size 2120 bytes, terminalandcardaction.o(i.BuildTDOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608<LI>Call Chain = BuildTDOL &rArr; buildDOL &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Hash
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSeparate
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>

<P><STRONG><a name="[ba]"></a>BuildTLVString</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, emvproc.o(i.BuildTLVString))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BuildTLVString &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
</UL>

<P><STRONG><a name="[bb]"></a>Buildcdol1</STRONG> (Thumb, 76 bytes, Stack size 216 bytes, emvpublic.o(i.Buildcdol1))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = Buildcdol1 &rArr; buildDOL &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
</UL>

<P><STRONG><a name="[fd]"></a>CRC32Software</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, tms.o(i.CRC32Software))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CRC32Software
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_Crc_Calculate
</UL>

<P><STRONG><a name="[bd]"></a>CalMAC</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, p8583_proc.o(i.CalMAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = CalMAC &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDGetMac
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[23c]"></a>CalcBerTlvLen</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, terminalandcardaction.o(i.CalcBerTlvLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalcBerTlvLen
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
</UL>

<P><STRONG><a name="[23b]"></a>CalcIssuerLen</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, terminalandcardaction.o(i.CalcIssuerLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CalcIssuerLen
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
</UL>

<P><STRONG><a name="[c1]"></a>CancelTrans</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, emvproc.o(i.CancelTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = CancelTrans &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagOpen
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_close
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
</UL>

<P><STRONG><a name="[c8]"></a>CardActionAnalysis</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, terminalandcardaction.o(i.CardActionAnalysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CardActionAnalysis &rArr; DolGetByTag &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DolGetByTag
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
</UL>

<P><STRONG><a name="[21d]"></a>Char2Long</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, emvproc.o(i.Char2Long))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Char2Long
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
</UL>

<P><STRONG><a name="[ca]"></a>ChargingTips</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, p8583_proc.o(i.ChargingTips))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = ChargingTips &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_BattVol
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>CheckCAPKParam</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, emvproc.o(i.CheckCAPKParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = CheckCAPKParam &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardCapkCount
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidCount
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
</UL>

<P><STRONG><a name="[d1]"></a>CheckDataLen</STRONG> (Thumb, 60 bytes, Stack size 544 bytes, appselect.o(i.CheckDataLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = CheckDataLen &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
</UL>

<P><STRONG><a name="[d4]"></a>CheckEmvParameter</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, flash_oper.o(i.CheckEmvParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8836<LI>Call Chain = CheckEmvParameter &rArr; DownLoadEmvParam &rArr; QueryEmvParam &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
</UL>

<P><STRONG><a name="[d7]"></a>CheckFreePsw</STRONG> (Thumb, 106 bytes, Stack size 104 bytes, p8583_trade.o(i.CheckFreePsw))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CheckFreePsw &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswAmount
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswSwitch
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCDCVMSwitch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[db]"></a>CheckFreeSign</STRONG> (Thumb, 82 bytes, Stack size 64 bytes, p8583_trade.o(i.CheckFreeSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CheckFreeSign &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreeSignAmount
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCFreeSigntSwitch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[3a0]"></a>CheckGanDataLen</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tradeassistfun.o(i.CheckGanDataLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckGanDataLen
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[154]"></a>CheckHead</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, emvrsa.o(i.CheckHead))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[43]"></a>CheckICTI</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, appselect.o(i.CheckICTI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckICTI
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
</UL>

<P><STRONG><a name="[98]"></a>CheckInitState</STRONG> (Thumb, 110 bytes, Stack size 208 bytes, flash_oper.o(i.CheckInitState))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CheckInitState &rArr; AddOperInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperInfor
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemSafety
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemInfor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDirectorInfor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init88OperInfor
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[e2]"></a>CheckPINData</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, offlinedataauth.o(i.CheckPINData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckPINData
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[e3]"></a>CheckPosLogin</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, p8583_trade.o(i.CheckPosLogin))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = CheckPosLogin &rArr; CheckCAPKParam &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPBOCDemotion
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[e5]"></a>CheckReverseInfor</STRONG> (Thumb, 150 bytes, Stack size 1528 bytes, p8583_assist.o(i.CheckReverseInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = CheckReverseInfor &rArr; GetSaleIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
</UL>

<P><STRONG><a name="[18d]"></a>CheckSFI</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, appselect.o(i.CheckSFI))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckSFI
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
</UL>

<P><STRONG><a name="[e9]"></a>CheckStaticData</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, offlinedataauth.o(i.CheckStaticData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckStaticData
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
</UL>

<P><STRONG><a name="[ea]"></a>CheckTagLen</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, emvpublic.o(i.CheckTagLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>

<P><STRONG><a name="[eb]"></a>CheckTradeExist</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, p8583_assist.o(i.CheckTradeExist))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = CheckTradeExist &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidCount
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelCount
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
</UL>

<P><STRONG><a name="[f3]"></a>ClearADFEntry</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, appselect.o(i.ClearADFEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearADFEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
</UL>

<P><STRONG><a name="[5f]"></a>ClearDDFADFEntry</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, appselect.o(i.ClearDDFADFEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearDDFADFEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
</UL>

<P><STRONG><a name="[f4]"></a>ClearTradeLog</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, flash_oper.o(i.ClearTradeLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832<LI>Call Chain = ClearTradeLog &rArr; ResetflashSection171 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection16
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection9
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection8
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection7
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection5
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection172
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection171
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection15
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection14
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection13
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection12
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection10
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[27a]"></a>ClearZeroAndFF</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, emvpublic.o(i.ClearZeroAndFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearZeroAndFF
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>

<P><STRONG><a name="[f5]"></a>ClrBelow</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, emvport.o(i.ClrBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ClrBelow &rArr; Lib_ScrClrLine
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
</UL>

<P><STRONG><a name="[f6]"></a>Clss_transmit</STRONG> (Thumb, 180 bytes, Stack size 256 bytes, qpboctran.o(i.Clss_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4336<LI>Call Chain = Clss_transmit &rArr; cEmvLib_OnlineProc &rArr; ReverseProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubAsc2Bcd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[fb]"></a>Code_Crc_Calculate</STRONG> (Thumb, 148 bytes, Stack size 2136 bytes, tms.o(i.Code_Crc_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160<LI>Call Chain = Code_Crc_Calculate &rArr; Lib_Read_pFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Read_pFlash
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC32Software
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[fe]"></a>Code_DigitVerify_Calculate</STRONG> (Thumb, 298 bytes, Stack size 3984 bytes, tms.o(i.Code_DigitVerify_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056<LI>Call Chain = Code_DigitVerify_Calculate &rArr; sha4_finish &rArr; sha4_update &rArr; sha4_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd2
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Read_pFlash
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RSAPublicKeyDecrypt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_update
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_starts
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_finish
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[103]"></a>CommunicationMenu</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, menu.o(i.CommunicationMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = CommunicationMenu &rArr; GPRSSetFuntion &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WiFiModeInterface
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPDU2SetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_NetwordSelection
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
</UL>

<P><STRONG><a name="[3]"></a>Compare</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, appselect.o(i.Compare))
<BR>[Address Reference Count : 3]<UL><LI> appselect.o(i.FinalSelect)
<LI> appselect.o(i.FinalSelectForLog)
<LI> entry.o(i.Contactless_GetHighestPriority)
</UL>
<P><STRONG><a name="[10a]"></a>ContactlessAddCandidateList</STRONG> (Thumb, 510 bytes, Stack size 104 bytes, entry.o(i.ContactlessAddCandidateList))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ContactlessAddCandidateList &rArr; EmvLib_GetApp &rArr; GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileClose
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
</UL>

<P><STRONG><a name="[10c]"></a>Contactless_AnalysePSEDir</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, entry.o(i.Contactless_AnalysePSEDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Contactless_AnalysePSEDir &rArr; ContactlessAddCandidateList &rArr; EmvLib_GetApp &rArr; GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_ClearADFEntry
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
</UL>

<P><STRONG><a name="[10d]"></a>Contactless_ClearADFEntry</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, entry.o(i.Contactless_ClearADFEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Contactless_ClearADFEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
</UL>

<P><STRONG><a name="[10e]"></a>Contactless_GetHighestPriority</STRONG> (Thumb, 192 bytes, Stack size 1200 bytes, entry.o(i.Contactless_GetHighestPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = Contactless_GetHighestPriority &rArr; qsort &rArr;  qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
</UL>

<P><STRONG><a name="[10f]"></a>ConvBcdAmount</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, qpboctran.o(i.ConvBcdAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ConvBcdAmount &rArr; LongToDec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubBcd2Asc
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongToDec
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[112]"></a>ConvBcdToBin</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, emvport.o(i.ConvBcdToBin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ConvBcdToBin &rArr; dat_bcdtobin
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_ultohex
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
</UL>

<P><STRONG><a name="[392]"></a>Conv_CharToDisp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, appselect.o(i.Conv_CharToDisp))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_BinToDisp
</UL>

<P><STRONG><a name="[114]"></a>CtlParFuntion</STRONG> (Thumb, 4014 bytes, Stack size 80 bytes, loginfun.o(i.CtlParFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = CtlParFuntion &rArr; DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSetMmi
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSwitchMmi
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_InputMode
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DesSetFuntion
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[17e]"></a>DebugTraceDisp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.DebugTraceDisp))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
</UL>

<P><STRONG><a name="[2a7]"></a>DelBitmapField</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, p8583_proc.o(i.DelBitmapField))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DelBitmapField
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
</UL>

<P><STRONG><a name="[11a]"></a>DelOperFuntion</STRONG> (Thumb, 310 bytes, Stack size 88 bytes, loginfun.o(i.DelOperFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = DelOperFuntion &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperInfor
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[11b]"></a>DelOperInfor</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, flash_oper.o(i.DelOperInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DelOperInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
</UL>

<P><STRONG><a name="[11d]"></a>DesSetFuntion</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, loginfun.o(i.DesSetFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = DesSetFuntion &rArr; CtlParFuntion &rArr; DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDReadMkeyMode
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDWriteMkeyMode
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[120]"></a>DirectSendToCard</STRONG> (Thumb, 150 bytes, Stack size 1424 bytes, terminalandcardaction.o(i.DirectSendToCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 2088<LI>Call Chain = DirectSendToCard &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
</UL>

<P><STRONG><a name="[122]"></a>DirectorVerifyPasswrod</STRONG> (Thumb, 264 bytes, Stack size 120 bytes, loginfun.o(i.DirectorVerifyPasswrod))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = DirectorVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIDOperInfor
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[124]"></a>DisSaleList</STRONG> (Thumb, 584 bytes, Stack size 336 bytes, p8583_proc.o(i.DisSaleList))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = DisSaleList &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
</UL>

<P><STRONG><a name="[126]"></a>DisSummary</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, p8583_assist.o(i.DisSummary))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = DisSummary &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
</UL>

<P><STRONG><a name="[127]"></a>DisSweepCodeTradeInfor</STRONG> (Thumb, 490 bytes, Stack size 168 bytes, p8583_assist.o(i.DisSweepCodeTradeInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = DisSweepCodeTradeInfor &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[128]"></a>DisTradeInfor</STRONG> (Thumb, 1652 bytes, Stack size 168 bytes, p8583_assist.o(i.DisTradeInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = DisTradeInfor &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrGotoxy
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrDrawLogo
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
</UL>

<P><STRONG><a name="[12b]"></a>DispErrInfoFun</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, p8583_error.o(i.DispErrInfoFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = DispErrInfoFun &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
</UL>

<P><STRONG><a name="[76]"></a>DispLog</STRONG> (Thumb, 296 bytes, Stack size 15424 bytes, appapi.o(i.DispLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 15448<LI>Call Chain = DispLog &rArr; Lib_ScrDrawLogoxy
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrDrawLogoxy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Read_pFlash
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
</UL>

<P><STRONG><a name="[56]"></a>DispRetCode</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, p8583_error.o(i.DispRetCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = DispRetCode &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>

<P><STRONG><a name="[12d]"></a>DispTrackPANFun</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, tradeassistfun.o(i.DispTrackPANFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = DispTrackPANFun &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[12e]"></a>DispTradeInfo</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, tradeassistfun.o(i.DispTradeInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = DispTradeInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_close
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLinePlainPin
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
</UL>

<P><STRONG><a name="[12f]"></a>DispTransName</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, emvinsertcard.o(i.DispTransName))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = DispTransName &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubShowTitle
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTransModeSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[119]"></a>Disp_InputMode</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, loginfun.o(i.Disp_InputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = Disp_InputMode &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>

<P><STRONG><a name="[132]"></a>DispartGenAC</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, emviccomm.o(i.DispartGenAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DispartGenAC &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
</UL>

<P><STRONG><a name="[133]"></a>DispartGetProcOp</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, emviccomm.o(i.DispartGetProcOp))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DispartGetProcOp &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
</UL>

<P><STRONG><a name="[63]"></a>DispartSelect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, appselect.o(i.DispartSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DispartSelect &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[134]"></a>DisplayICCProcessing</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, emvinsertcard.o(i.DisplayICCProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = DisplayICCProcessing &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[135]"></a>Display_RetCode</STRONG> (Thumb, 768 bytes, Stack size 144 bytes, tms.o(i.Display_RetCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = Display_RetCode &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_response
</UL>

<P><STRONG><a name="[c9]"></a>DolGetByTag</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, terminalandcardaction.o(i.DolGetByTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DolGetByTag &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardActionAnalysis
</UL>

<P><STRONG><a name="[d6]"></a>DownLoadCAPK</STRONG> (Thumb, 358 bytes, Stack size 1024 bytes, emvproc.o(i.DownLoadCAPK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8572<LI>Call Chain = DownLoadCAPK &rArr; QueryEmvCapk &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardCapkRecordAll
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddCapk
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCoreCapkInfo
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEmvParameter
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[d5]"></a>DownLoadEmvParam</STRONG> (Thumb, 452 bytes, Stack size 1272 bytes, emvproc.o(i.DownLoadEmvParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 8820<LI>Call Chain = DownLoadEmvParam &rArr; QueryEmvParam &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SaveICCardAidListRecord
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidRecordAll
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidListRecordAll
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddApp
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEmvParameter
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[140]"></a>DownloadMenu</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, menu.o(i.DownloadMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 18264<LI>Call Chain = DownloadMenu &rArr; TMS_Management_Menu &rArr;  TRANS_Batch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermPassWordCheck
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RemoteUpdate
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_SavePBOCDefaultPara
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
</UL>

<P><STRONG><a name="[2e4]"></a>DrawCursor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, loginfun.o(i.DrawCursor))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[144]"></a>DspOperateInfo</STRONG> (Thumb, 634 bytes, Stack size 184 bytes, appapi.o(i.DspOperateInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrDrawLine
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteErrorWarn
</UL>

<P><STRONG><a name="[146]"></a>DspRedAmount</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, p8583_proc.o(i.DspRedAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = DspRedAmount &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontBlack
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
</UL>

<P><STRONG><a name="[116]"></a>DspSetMmi</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, appapi.o(i.DspSetMmi))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>

<P><STRONG><a name="[117]"></a>DspSwitchMmi</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, appapi.o(i.DspSwitchMmi))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = DspSwitchMmi &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>

<P><STRONG><a name="[7f]"></a>DspTile</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, appapi.o(i.DspTile))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrArea
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSetMmi
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
</UL>

<P><STRONG><a name="[149]"></a>EMVExternalAuthenticate</STRONG> (Thumb, 146 bytes, Stack size 1416 bytes, emviccomm.o(i.EMVExternalAuthenticate))
<BR><BR>[Stack]<UL><LI>Max Depth = 2080<LI>Call Chain = EMVExternalAuthenticate &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccSetAutoResp
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[14b]"></a>EMVGenerateAC</STRONG> (Thumb, 1060 bytes, Stack size 1456 bytes, emviccomm.o(i.EMVGenerateAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120<LI>Call Chain = EMVGenerateAC &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBER_TLVByTag
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGenAC
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
</UL>

<P><STRONG><a name="[14d]"></a>EMVGetChallenge</STRONG> (Thumb, 114 bytes, Stack size 1416 bytes, emviccomm.o(i.EMVGetChallenge))
<BR><BR>[Stack]<UL><LI>Max Depth = 2080<LI>Call Chain = EMVGetChallenge &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[14e]"></a>EMVGetData</STRONG> (Thumb, 354 bytes, Stack size 1432 bytes, emviccomm.o(i.EMVGetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096<LI>Call Chain = EMVGetData &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_Inquiry
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[14f]"></a>EMVGetProcessingOptions</STRONG> (Thumb, 436 bytes, Stack size 1448 bytes, emviccomm.o(i.EMVGetProcessingOptions))
<BR><BR>[Stack]<UL><LI>Max Depth = 2112<LI>Call Chain = EMVGetProcessingOptions &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGetProcOp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
</UL>

<P><STRONG><a name="[163]"></a>EMVIF_FileSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.EMVIF_FileSize))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
</UL>

<P><STRONG><a name="[150]"></a>EMVIF_GetRandNumber</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvport.o(i.EMVIF_GetRandNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EMVIF_GetRandNumber &rArr; Lib_PEDGetRand &rArr; Pci_GetRnd
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDGetRand
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenRandValue
</UL>

<P><STRONG><a name="[380]"></a>EMVIF_GetRandNumberByNum</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.EMVIF_GetRandNumberByNum))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[16d]"></a>EMVIF_GetsumLogByPAN</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.EMVIF_GetsumLogByPAN))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
</UL>

<P><STRONG><a name="[351]"></a>EMVIF_PrintSignature</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.EMVIF_PrintSignature))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignatureProcessing
</UL>

<P><STRONG><a name="[239]"></a>EMVIF_SearchBlackList</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvif.o(i.EMVIF_SearchBlackList))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[16c]"></a>EMVIF_SearchExceptionList</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.EMVIF_SearchExceptionList))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
</UL>

<P><STRONG><a name="[152]"></a>EMVInternalAuthenticate</STRONG> (Thumb, 342 bytes, Stack size 1448 bytes, emviccomm.o(i.EMVInternalAuthenticate))
<BR><BR>[Stack]<UL><LI>Max Depth = 2112<LI>Call Chain = EMVInternalAuthenticate &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
</UL>

<P><STRONG><a name="[2c8]"></a>EMVMMI_InputAmount</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, qpboc.o(i.EMVMMI_InputAmount))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
</UL>

<P><STRONG><a name="[153]"></a>EMVSignVeri</STRONG> (Thumb, 1348 bytes, Stack size 2880 bytes, emvrsa.o(i.EMVSignVeri))
<BR><BR>[Stack]<UL><LI>Max Depth = 2988<LI>Call Chain = EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Hash
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RSAPublicKeyDecrypt
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHead
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
</UL>

<P><STRONG><a name="[159]"></a>EMVVerify</STRONG> (Thumb, 170 bytes, Stack size 1416 bytes, emviccomm.o(i.EMVVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 2080<LI>Call Chain = EMVVerify &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccSetAutoResp
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLinePlainPin
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[15a]"></a>EMV_CardholderVerification</STRONG> (Thumb, 628 bytes, Stack size 304 bytes, cardholderverify.o(i.EMV_CardholderVerification))
<BR><BR>[Stack]<UL><LI>Max Depth = 7180<LI>Call Chain = EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
</UL>

<P><STRONG><a name="[15c]"></a>EMV_ClearALLTLVData</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, emvlib.o(i.EMV_ClearALLTLVData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMV_ClearALLTLVData
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
</UL>

<P><STRONG><a name="[15d]"></a>EMV_EC_Inquiry</STRONG> (Thumb, 94 bytes, Stack size 520 bytes, emvlib.o(i.EMV_EC_Inquiry))
<BR><BR>[Stack]<UL><LI>Max Depth = 2616<LI>Call Chain = EMV_EC_Inquiry &rArr; EMVGetData &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetBalance
</UL>

<P><STRONG><a name="[ad]"></a>EMV_EC_SetParameter</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, emvlib.o(i.EMV_EC_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EMV_EC_SetParameter &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
</UL>

<P><STRONG><a name="[15e]"></a>EMV_FindCAPK</STRONG> (Thumb, 130 bytes, Stack size 376 bytes, emvfile.o(i.EMV_FindCAPK))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = EMV_FindCAPK &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardCapkIndex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardCapkCount
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCapkData
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
</UL>

<P><STRONG><a name="[161]"></a>EMV_FindRevocList</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, emvfile.o(i.EMV_FindRevocList))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EMV_FindRevocList &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileSeek
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRead
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileClose
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_FileSize
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
</UL>

<P><STRONG><a name="[166]"></a>EMV_OnlineProcessing</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, emvlib.o(i.EMV_OnlineProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 6508<LI>Call Chain = EMV_OnlineProcessing &rArr; _OnlineProcessing &rArr; _ProcIssuerDef &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_AdviceProc
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
</UL>

<P><STRONG><a name="[168]"></a>EMV_ProcessRestrictions</STRONG> (Thumb, 552 bytes, Stack size 104 bytes, processrestrict.o(i.EMV_ProcessRestrictions))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = EMV_ProcessRestrictions &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
</UL>

<P><STRONG><a name="[169]"></a>EMV_TerminalAndCardActionAnalysis</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, emvlib.o(i.EMV_TerminalAndCardActionAnalysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 5140<LI>Call Chain = EMV_TerminalAndCardActionAnalysis &rArr; _TerminalAndCardActionAnalysis &rArr; TerminalAction &rArr; ForcedOnline &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_AdviceProc
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
</UL>

<P><STRONG><a name="[16b]"></a>EMV_TerminalRiskManagement</STRONG> (Thumb, 946 bytes, Stack size 208 bytes, terminalrisk.o(i.EMV_TerminalRiskManagement))
<BR><BR>[Stack]<UL><LI>Max Depth = 2304<LI>Call Chain = EMV_TerminalRiskManagement &rArr; EMVGetData &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_hextoul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_SearchExceptionList
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetsumLogByPAN
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenRandValue
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
</UL>

<P><STRONG><a name="[16f]"></a>EcAppQue</STRONG> (Thumb, 60 bytes, Stack size 112 bytes, emvinsertcard.o(i.EcAppQue))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EcAppQue &rArr; EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[171]"></a>ElectricQuantityDetection</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, p8583_proc.o(i.ElectricQuantityDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = ElectricQuantityDetection &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_BattVol
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
</UL>

<P><STRONG><a name="[396]"></a>EmvFuncInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, emvif.o(i.EmvFuncInit))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
</UL>

<P><STRONG><a name="[13d]"></a>EmvLib_AddApp</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, emvfile.o(i.EmvLib_AddApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EmvLib_AddApp &rArr; Lib_SaveICCardAidRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SaveICCardAidRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[13a]"></a>EmvLib_AddCapk</STRONG> (Thumb, 32 bytes, Stack size 528 bytes, emvfile.o(i.EmvLib_AddCapk))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = EmvLib_AddCapk &rArr; Lib_SaveICCardCapkRecord
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SaveICCardCapkRecord
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
</UL>

<P><STRONG><a name="[174]"></a>EmvLib_AppSel</STRONG> (Thumb, 144 bytes, Stack size 128 bytes, emvlib.o(i.EmvLib_AppSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 9360<LI>Call Chain = EmvLib_AppSel &rArr; SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dat_bintobcd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RetglCandidateListNum
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[17a]"></a>EmvLib_AppSelForLog</STRONG> (Thumb, 72 bytes, Stack size 120 bytes, emvlib.o(i.EmvLib_AppSelForLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 9352<LI>Call Chain = EmvLib_AppSelForLog &rArr; SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[17c]"></a>EmvLib_CardAuth</STRONG> (Thumb, 356 bytes, Stack size 56 bytes, offlinedataauth.o(i.EmvLib_CardAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 7604<LI>Call Chain = EmvLib_CardAuth &rArr; OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugTraceDisp
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombinedDDA
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[3f]"></a>EmvLib_GetApp</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, emvfile.o(i.EmvLib_GetApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EmvLib_GetApp &rArr; GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidIndex
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
</UL>

<P><STRONG><a name="[183]"></a>EmvLib_GetBalance</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvlib.o(i.EmvLib_GetBalance))
<BR><BR>[Stack]<UL><LI>Max Depth = 2624<LI>Call Chain = EmvLib_GetBalance &rArr; EMV_EC_Inquiry &rArr; EMVGetData &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_EC_Inquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
</UL>

<P><STRONG><a name="[184]"></a>EmvLib_GetParam</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, emvfile.o(i.EmvLib_GetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EmvLib_GetParam &rArr; GetICCardParam &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardParam
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
</UL>

<P><STRONG><a name="[186]"></a>EmvLib_GetScriptResult</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, emvlib.o(i.EmvLib_GetScriptResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EmvLib_GetScriptResult &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
</UL>

<P><STRONG><a name="[170]"></a>EmvLib_GetTLV</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, emvlib.o(i.EmvLib_GetTLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIssuerName
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTermCapForApp
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EcAppQue
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvData
</UL>

<P><STRONG><a name="[187]"></a>EmvLib_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, emvfile.o(i.EmvLib_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = EmvLib_Init &rArr; s_InitCAPKList &rArr; cEmvLib_GetDateTime &rArr; gettime_pboc &rArr; Lib_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetParam
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_EmvFuncInit
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_InitCAPKList
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_InitAppList
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
</UL>

<P><STRONG><a name="[18b]"></a>EmvLib_ProcTrans</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, emvlib.o(i.EmvLib_ProcTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 7212<LI>Call Chain = EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalAndCardActionAnalysis
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_OnlineProcessing
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
</UL>

<P><STRONG><a name="[18c]"></a>EmvLib_ReadAppData</STRONG> (Thumb, 1428 bytes, Stack size 1768 bytes, appselect.o(i.EmvLib_ReadAppData))
<BR><BR>[Stack]<UL><LI>Max Depth = 3864<LI>Call Chain = EmvLib_ReadAppData &rArr; EMVGetData &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdadd
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetRandNumber
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdToBin
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSFI
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDataLen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[191]"></a>EmvLib_SetParam</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, emvfile.o(i.EmvLib_SetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EmvLib_SetParam &rArr; SaveICCardParam &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveICCardParam
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
</UL>

<P><STRONG><a name="[fa]"></a>EmvLib_SetTLV</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, emvlib.o(i.EmvLib_SetTLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EmvLib_SetTLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTagLen
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEmvTranType
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTermCapForApp
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_InputAmt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[18e]"></a>EmvReadRecord</STRONG> (Thumb, 390 bytes, Stack size 736 bytes, emviccomm.o(i.EmvReadRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = EmvReadRecord &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleSeparate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[61]"></a>EmvSelect</STRONG> (Thumb, 422 bytes, Stack size 928 bytes, emviccomm.o(i.EmvSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 1592<LI>Call Chain = EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[194]"></a>EncodePasswordFun</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tradeassistfun.o(i.EncodePasswordFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EncodePasswordFun &rArr; Lib_PEDDes
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDDes
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
</UL>

<P><STRONG><a name="[81]"></a>EnterSequenceNumber</STRONG> (Thumb, 326 bytes, Stack size 120 bytes, tradeassistfun.o(i.EnterSequenceNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_NetwordSelection
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_check_number_key
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
</UL>

<P><STRONG><a name="[197]"></a>EnterTradeAmountFun</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, tradeassistfun.o(i.EnterTradeAmountFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = EnterTradeAmountFun &rArr; GetInputAmount &rArr; LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
</UL>

<P><STRONG><a name="[199]"></a>Entry_AppSlt</STRONG> (Thumb, 222 bytes, Stack size 616 bytes, entry.o(i.Entry_AppSlt))
<BR><BR>[Stack]<UL><LI>Max Depth = 2776<LI>Call Chain = Entry_AppSlt &rArr; _cl_EmvSelect &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[19b]"></a>Entry_DelCurCandApp</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, entry.o(i.Entry_DelCurCandApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Entry_DelCurCandApp &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[19c]"></a>Entry_FinalSelect</STRONG> (Thumb, 426 bytes, Stack size 656 bytes, entry.o(i.Entry_FinalSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 2816<LI>Call Chain = Entry_FinalSelect &rArr; _cl_EmvSelect &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_GetHighestPriority
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[19d]"></a>Entry_GetPreProcInterFlg</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, entry.o(i.Entry_GetPreProcInterFlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Entry_GetPreProcInterFlg &rArr; dat_bcdtobin
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_ultohex
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermOnline
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[19f]"></a>Entry_PreTransProc</STRONG> (Thumb, 556 bytes, Stack size 232 bytes, entry.o(i.Entry_PreTransProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Entry_PreTransProc &rArr; dat_bintobcd &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_asctobcd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_ultohex
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ClearALLTLVData
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bintobcd
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermOnline
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[65]"></a>FillADFEntry</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, appselect.o(i.FillADFEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FillADFEntry &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
</UL>

<P><STRONG><a name="[177]"></a>FinalSelect</STRONG> (Thumb, 856 bytes, Stack size 3504 bytes, appselect.o(i.FinalSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096<LI>Call Chain = FinalSelect &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTLVSeparate
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_BinToDisp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCandidateListAttr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteFromtSortAppList
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
</UL>

<P><STRONG><a name="[17b]"></a>FinalSelectForLog</STRONG> (Thumb, 806 bytes, Stack size 3504 bytes, appselect.o(i.FinalSelectForLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096<LI>Call Chain = FinalSelectForLog &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrBelow
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_disp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTLVSeparate
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_BinToDisp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCandidateListAttr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteFromtSortAppList
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSelForLog
</UL>

<P><STRONG><a name="[b7]"></a>FindSeparate</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, terminalandcardaction.o(i.FindSeparate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FindSeparate &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
</UL>

<P><STRONG><a name="[64]"></a>FindTLVSeparate</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, terminalandcardaction.o(i.FindTLVSeparate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FindTLVSeparate &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[13b]"></a>FinishDownLoad</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, emvproc.o(i.FinishDownLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 7540<LI>Call Chain = FinishDownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCommData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
</UL>

<P><STRONG><a name="[1a6]"></a>FirstRun1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.FirstRun1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FirstRun1 &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
</UL>

<P><STRONG><a name="[1a7]"></a>FirstSetRun1</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, flash_oper.o(i.FirstSetRun1))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = FirstSetRun1 &rArr; menumodle &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
</UL>

<P><STRONG><a name="[96]"></a>FlashWriteErrorWarn</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, flash_oper.o(i.FlashWriteErrorWarn))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = FlashWriteErrorWarn &rArr; DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[1a9]"></a>ForcedOnline</STRONG> (Thumb, 332 bytes, Stack size 544 bytes, terminalrisk.o(i.ForcedOnline))
<BR><BR>[Stack]<UL><LI>Max Depth = 4388<LI>Call Chain = ForcedOnline &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcReasonAdvice
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardActionAnalysis
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>

<P><STRONG><a name="[125]"></a>FormatDataMoney</STRONG> (Thumb, 50 bytes, Stack size 328 bytes, tradeassistfun.o(i.FormatDataMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = FormatDataMoney &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[158]"></a>FromTimeToY4MMDD</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, emvpublic.o(i.FromTimeToY4MMDD))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[105]"></a>GPRSSetFuntion</STRONG> (Thumb, 854 bytes, Stack size 240 bytes, loginfun.o(i.GPRSSetFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = GPRSSetFuntion &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort1
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP1
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetAPN
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort2
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort1
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP2
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP1
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIPPort1
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIPPort
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIP1
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIP
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetAPN
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInsertMode
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInsertAdd
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort2
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort1
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP2
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP1
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInsertMode
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInsertAdd
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[1c5]"></a>GenIssuerResult</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, terminalandcardaction.o(i.GenIssuerResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GenIssuerResult &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
</UL>

<P><STRONG><a name="[1c6]"></a>GenMKAndEnc</STRONG> (Thumb, 192 bytes, Stack size 576 bytes, emvproc.o(i.GenMKAndEnc))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = GenMKAndEnc &rArr; get_random_number &rArr; Lib_PEDGetRand &rArr; Pci_GetRnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RSAPublicKeyDecrypt
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
</UL>

<P><STRONG><a name="[16e]"></a>GenRandValue</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, terminalrisk.o(i.GenRandValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GenRandValue &rArr; EMVIF_GetRandNumber &rArr; Lib_PEDGetRand &rArr; Pci_GetRnd
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetRandNumber
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
</UL>

<P><STRONG><a name="[1c8]"></a>Get8583Field</STRONG> (Thumb, 282 bytes, Stack size 56 bytes, p8583_proc.o(i.Get8583Field))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Get8583Field &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolveHostPacket
</UL>

<P><STRONG><a name="[1ca]"></a>Get8583MsgID</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, p8583_proc.o(i.Get8583MsgID))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Get8583MsgID &rArr; atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolveHostPacket
</UL>

<P><STRONG><a name="[182]"></a>GetAidData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetAidData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAidData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
</UL>

<P><STRONG><a name="[1cb]"></a>GetAidListData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetAidListData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAidListData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
</UL>

<P><STRONG><a name="[1cc]"></a>GetAuTHSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuTHSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuTHSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[1cd]"></a>GetAuthCancelPwordSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCancelPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCancelPwordSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[1ce]"></a>GetAuthCancelSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCancelSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCancelSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[1cf]"></a>GetAuthCompleteBrushSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCompleteBrushSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCompleteBrushSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
</UL>

<P><STRONG><a name="[1d0]"></a>GetAuthCompleteSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCompleteSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCompleteSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[1d1]"></a>GetAuthCompleteVoidPwordSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCompleteVoidPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCompleteVoidPwordSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[1d2]"></a>GetAuthCompleteVoidSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCompleteVoidSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAuthCompleteVoidSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[ee]"></a>GetAuthCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAuthCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog1
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
</UL>

<P><STRONG><a name="[1d3]"></a>GetAuthData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAuthData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog1
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[1d4]"></a>GetAuthIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetAuthIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAuthIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog1
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[14c]"></a>GetBER_TLVByTag</STRONG> (Thumb, 208 bytes, Stack size 304 bytes, emviccomm.o(i.GetBER_TLVByTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GetBER_TLVByTag &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
</UL>

<P><STRONG><a name="[1d5]"></a>GetBalanceSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetBalanceSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetBalanceSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[1d6]"></a>GetBankName</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, p8583_error.o(i.GetBankName))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetBankName &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[1d7]"></a>GetBatchUpList</STRONG> (Thumb, 772 bytes, Stack size 1648 bytes, p8583_assist.o(i.GetBatchUpList))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672<LI>Call Chain = GetBatchUpList &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
</UL>

<P><STRONG><a name="[1da]"></a>GetBatchUpList1</STRONG> (Thumb, 264 bytes, Stack size 1528 bytes, p8583_assist.o(i.GetBatchUpList1))
<BR><BR>[Stack]<UL><LI>Max Depth = 2144<LI>Call Chain = GetBatchUpList1 &rArr; GetTxnTableIndex &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsciiString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
</UL>

<P><STRONG><a name="[1de]"></a>GetBatchUpNum</STRONG> (Thumb, 226 bytes, Stack size 1536 bytes, p8583_assist.o(i.GetBatchUpNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = GetBatchUpNum &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
</UL>

<P><STRONG><a name="[1df]"></a>GetCCIDNum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetCCIDNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCCIDNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
</UL>

<P><STRONG><a name="[d8]"></a>GetCDCVMSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetCDCVMSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetCDCVMSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[dd]"></a>GetCFreeSigntSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetCFreeSigntSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetCFreeSigntSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreeSign
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[ef]"></a>GetCancelCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetCancelCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCancelCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
</UL>

<P><STRONG><a name="[1e0]"></a>GetCancelData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetCancelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCancelData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[1e1]"></a>GetCancelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetCancelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCancelIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[1a3]"></a>GetCandidateListAttr</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, appselect.o(i.GetCandidateListAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetCandidateListAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[160]"></a>GetCapkData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetCapkData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCapkData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
</UL>

<P><STRONG><a name="[1e2]"></a>GetCard</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, emvport.o(i.GetCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 9496<LI>Call Chain = GetCard &rArr; InsertCardProc &rArr; EmvLib_AppSel &rArr; SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstPlaycardsSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[1e5]"></a>GetCardFromTrack</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, emvport.o(i.GetCardFromTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetCardFromTrack &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
</UL>

<P><STRONG><a name="[f0]"></a>GetCompleteCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog2
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalAuthVoidTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
</UL>

<P><STRONG><a name="[1e6]"></a>GetCompleteData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog2
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalAuthVoidTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[1e7]"></a>GetCompleteIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog2
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalAuthVoidTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[f1]"></a>GetCompleteVoidCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteVoidCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteVoidCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
</UL>

<P><STRONG><a name="[1e8]"></a>GetCompleteVoidData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteVoidData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteVoidData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[1e9]"></a>GetCompleteVoidIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetCompleteVoidIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCompleteVoidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[1ea]"></a>GetCountryCode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetCountryCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCountryCode &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
</UL>

<P><STRONG><a name="[3c]"></a>GetCurrentBatchNum</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetCurrentBatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCurrentBatchNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBatch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[51]"></a>GetCurrentTraceNo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetCurrentTraceNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCurrentTraceNo &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTraceNo
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[1eb]"></a>GetCurrentTradeData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetCurrentTradeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCurrentTradeData &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[1ec]"></a>GetDefaultTrade</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetDefaultTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDefaultTrade &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[1ed]"></a>GetEmvTrackData</STRONG> (Thumb, 444 bytes, Stack size 80 bytes, emvinsertcard.o(i.GetEmvTrackData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GetEmvTrackData &rArr; SetIssuerName &rArr; EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsc0
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIssuerName
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTailChars
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatchTrack2AndPan
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardFromTrack
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[1f1]"></a>GetEndPrintInfor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, flash_oper.o(i.GetEndPrintInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetEndPrintInfor &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
</UL>

<P><STRONG><a name="[1f2]"></a>GetFirstDownLoadFlag</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetFirstDownLoadFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetFirstDownLoadFlag &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
</UL>

<P><STRONG><a name="[1e3]"></a>GetFirstPlaycardsSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetFirstPlaycardsSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetFirstPlaycardsSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[d9]"></a>GetFreePswAmount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetFreePswAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetFreePswAmount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[da]"></a>GetFreePswSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetFreePswSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetFreePswSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[dc]"></a>GetFreeSignAmount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetFreeSignAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetFreeSignAmount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreeSign
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[ce]"></a>GetICCardAidCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardAidCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardAidCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
</UL>

<P><STRONG><a name="[181]"></a>GetICCardAidIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardAidIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardAidIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
</UL>

<P><STRONG><a name="[1f3]"></a>GetICCardAidListCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardAidListCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardAidListCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
</UL>

<P><STRONG><a name="[1f4]"></a>GetICCardAidListIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardAidListIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardAidListIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
</UL>

<P><STRONG><a name="[cd]"></a>GetICCardCapkCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardCapkCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardCapkCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
</UL>

<P><STRONG><a name="[15f]"></a>GetICCardCapkIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardCapkIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardCapkIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
</UL>

<P><STRONG><a name="[185]"></a>GetICCardParam</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetICCardParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetICCardParam &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetParam
</UL>

<P><STRONG><a name="[1f5]"></a>GetICSaleSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetICSaleSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetICSaleSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
</UL>

<P><STRONG><a name="[1f6]"></a>GetIccPINPK</STRONG> (Thumb, 622 bytes, Stack size 1880 bytes, offlinedataauth.o(i.GetIccPINPK))
<BR><BR>[Stack]<UL><LI>Max Depth = 5308<LI>Call Chain = GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>

<P><STRONG><a name="[1f8]"></a>GetIccPK</STRONG> (Thumb, 832 bytes, Stack size 1736 bytes, offlinedataauth.o(i.GetIccPK))
<BR><BR>[Stack]<UL><LI>Max Depth = 5164<LI>Call Chain = GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIssuerPK
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDynamicData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombinedDDA
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
</UL>

<P><STRONG><a name="[198]"></a>GetInputAmount</STRONG> (Thumb, 972 bytes, Stack size 160 bytes, tradeassistfun.o(i.GetInputAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = GetInputAmount &rArr; LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_wait_keytone_over
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_InputAmt
</UL>

<P><STRONG><a name="[1b0]"></a>GetInsertAdd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetInsertAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetInsertAdd &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1ae]"></a>GetInsertMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetInsertMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetInsertMode &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1fb]"></a>GetJieShuanLogoffSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetJieShuanLogoffSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetJieShuanLogoffSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
</UL>

<P><STRONG><a name="[1fc]"></a>GetJieShuanPrintDetailSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetJieShuanPrintDetailSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetJieShuanPrintDetailSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
</UL>

<P><STRONG><a name="[1fd]"></a>GetKeyTone</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetKeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetKeyTone &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[1fe]"></a>GetLastPrintTraceNo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetLastPrintTraceNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetLastPrintTraceNo &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
</UL>

<P><STRONG><a name="[1ff]"></a>GetLimitMoney</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetLimitMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetLimitMoney &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[1b2]"></a>GetNetAPN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetNetAPN))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetNetAPN &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[200]"></a>GetNetworkSelection</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetNetworkSelection))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetNetworkSelection &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
</UL>

<P><STRONG><a name="[e4]"></a>GetPBOCDemotion</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetPBOCDemotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetPBOCDemotion &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
</UL>

<P><STRONG><a name="[201]"></a>GetPOSLockInfor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetPOSLockInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetPOSLockInfor &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[202]"></a>GetPosId</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetPosId))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetPosId &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[203]"></a>GetPrintCardNumSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetPrintCardNumSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetPrintCardNumSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[204]"></a>GetPrintDegree</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetPrintDegree))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetPrintDegree &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[205]"></a>GetPrintPageCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetPrintPageCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetPrintPageCnt &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[206]"></a>GetPrintTitle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetPrintTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetPrintTitle &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[207]"></a>GetQrCodePrintPageCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetQrCodePrintPageCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetQrCodePrintPageCnt &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[208]"></a>GetReSendCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetReSendCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetReSendCnt &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[209]"></a>GetRecvTimeOutReverseSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetRecvTimeOutReverseSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetRecvTimeOutReverseSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[ed]"></a>GetRefundCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetRefundCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRefundCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
</UL>

<P><STRONG><a name="[1dc]"></a>GetRefundData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetRefundData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRefundData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList1
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
</UL>

<P><STRONG><a name="[1db]"></a>GetRefundIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetRefundIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRefundIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList1
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
</UL>

<P><STRONG><a name="[20a]"></a>GetRefundSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetRefundSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetRefundSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[54]"></a>GetReverseInfor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetReverseInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetReverseInfor &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjExitReversal
</UL>

<P><STRONG><a name="[62]"></a>GetSFI</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, appselect.o(i.GetSFI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSFI
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[20b]"></a>GetSaleCancelPwordSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleCancelPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSaleCancelPwordSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[e6]"></a>GetSaleCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
</UL>

<P><STRONG><a name="[20c]"></a>GetSaleD0Switch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleD0Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSaleD0Switch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
</UL>

<P><STRONG><a name="[e8]"></a>GetSaleData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
</UL>

<P><STRONG><a name="[20d]"></a>GetSaleFailCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleFailCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleFailCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
</UL>

<P><STRONG><a name="[20e]"></a>GetSaleFailData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleFailData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleFailData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
</UL>

<P><STRONG><a name="[20f]"></a>GetSaleFailIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleFailIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleFailIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
</UL>

<P><STRONG><a name="[e7]"></a>GetSaleIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSaleIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
</UL>

<P><STRONG><a name="[210]"></a>GetSaleSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSaleSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[211]"></a>GetSaleVoidBrushSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleVoidBrushSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSaleVoidBrushSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
</UL>

<P><STRONG><a name="[212]"></a>GetSaleVoidSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSaleVoidSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSaleVoidSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[1b4]"></a>GetServerIP</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetServerIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetServerIP &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1b8]"></a>GetServerIP1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetServerIP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetServerIP1 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1b6]"></a>GetServerIPPort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetServerIPPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetServerIPPort &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1ba]"></a>GetServerIPPort1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetServerIPPort1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetServerIPPort1 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[213]"></a>GetSignNameSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetSignNameSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetSignNameSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[214]"></a>GetSubAppName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSubAppName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSubAppName &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[215]"></a>GetSweepCodeTriggerWay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepCodeTriggerWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepCodeTriggerWay &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[216]"></a>GetSweepCodeWay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepCodeWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepCodeWay &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[f2]"></a>GetSweepcodePayCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodePayCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodePayCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
</UL>

<P><STRONG><a name="[217]"></a>GetSweepcodePayData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodePayData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodePayData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
</UL>

<P><STRONG><a name="[218]"></a>GetSweepcodePayIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodePayIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodePayIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
</UL>

<P><STRONG><a name="[219]"></a>GetSweepcodeUndoCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodeUndoCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodeUndoCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[21a]"></a>GetSweepcodeUndoData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodeUndoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodeUndoData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[21b]"></a>GetSweepcodeUndoIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetSweepcodeUndoIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSweepcodeUndoIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
</UL>

<P><STRONG><a name="[21c]"></a>GetTLVItem</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, emvproc.o(i.GetTLVItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + In Cycle
<LI>Call Chain = GetTLVItem &rArr;  GetTLVItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsConstructedTag
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2Long
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
</UL>

<P><STRONG><a name="[1bc]"></a>GetTMSServerIP1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetTMSServerIP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTMSServerIP1 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1c1]"></a>GetTMSServerIP2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetTMSServerIP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTMSServerIP2 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1bf]"></a>GetTMSServerIPPort1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetTMSServerIPPort1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTMSServerIPPort1 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1c3]"></a>GetTMSServerIPPort2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetTMSServerIPPort2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTMSServerIPPort2 &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[21f]"></a>GetTPDUName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetTPDUName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTPDUName &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPDU2SetFuntion
</UL>

<P><STRONG><a name="[220]"></a>GetTmsAppVer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetTmsAppVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTmsAppVer &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[221]"></a>GetTmsDownFlg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetTmsDownFlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetTmsDownFlg &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[222]"></a>GetTotleList</STRONG> (Thumb, 1196 bytes, Stack size 1816 bytes, p8583_assist.o(i.GetTotleList))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840<LI>Call Chain = GetTotleList &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoIndex
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoData
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoCount
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidIndex
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidCount
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelCount
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
</UL>

<P><STRONG><a name="[130]"></a>GetTransModeSwitch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.GetTransModeSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetTransModeSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
</UL>

<P><STRONG><a name="[1dd]"></a>GetTxnTableIndex</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, p8583_proc.o(i.GetTxnTableIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GetTxnTableIndex &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[223]"></a>GetUnitName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetUnitName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetUnitName &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[224]"></a>GetUnitNameEnglish</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetUnitNameEnglish))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetUnitNameEnglish &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[225]"></a>GetUnitNum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.GetUnitNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetUnitNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[ec]"></a>GetVOIDCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetVOIDCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetVOIDCount &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
</UL>

<P><STRONG><a name="[1d9]"></a>GetVOIDData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash_oper.o(i.GetVOIDData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetVOIDData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
</UL>

<P><STRONG><a name="[1d8]"></a>GetVOIDIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flash_oper.o(i.GetVOIDIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
</UL>

<P><STRONG><a name="[226]"></a>GetWaitTime</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetWaitTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetWaitTime &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[227]"></a>GetZMangPwordSwitch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.GetZMangPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetZMangPwordSwitch &rArr; Lib_FlashGet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[35e]"></a>Get_LRC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tms.o(i.Get_LRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_LRC
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[228]"></a>HandSetKeyFuntion</STRONG> (Thumb, 450 bytes, Stack size 152 bytes, loginfun.o(i.HandSetKeyFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = HandSetKeyFuntion &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDReadMkeyMode
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_3Des
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDWriteWorkMKey
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Des
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToHex
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[22c]"></a>Hex_to_Bcd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dev_math.o(i.Hex_to_Bcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex_to_Bcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField63
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryOperIDCnt
</UL>

<P><STRONG><a name="[2d5]"></a>InceaseTraceNo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.InceaseTraceNo))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[2f7]"></a>Init8583Packet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, p8583_proc.o(i.Init8583Packet))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolveHostPacket
</UL>

<P><STRONG><a name="[e1]"></a>Init88OperInfor</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, flash_oper.o(i.Init88OperInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init88OperInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[179]"></a>InitApp</STRONG> (Thumb, 572 bytes, Stack size 1688 bytes, appselect.o(i.InitApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 3800<LI>Call Chain = InitApp &rArr; EMVGetProcessingOptions &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsExistEcSupportIndicator
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteFromtSortAppList
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
</UL>

<P><STRONG><a name="[1a5]"></a>InitCommData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.InitCommData))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
</UL>

<P><STRONG><a name="[e0]"></a>InitDirectorInfor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, flash_oper.o(i.InitDirectorInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitDirectorInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[df]"></a>InitSystemInfor</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, flash_oper.o(i.InitSystemInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitSystemInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[de]"></a>InitSystemSafety</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, flash_oper.o(i.InitSystemSafety))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitSystemSafety &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[22e]"></a>InputAmtExt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, cllbckfunc.o(i.InputAmtExt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InputAmtExt
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
</UL>

<P><STRONG><a name="[22f]"></a>InputAuthorizeCode</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, tradeassistfun.o(i.InputAuthorizeCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = InputAuthorizeCode &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[230]"></a>InputCardValid</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, tradeassistfun.o(i.InputCardValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = InputCardValid &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[231]"></a>InputOldReference</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, tradeassistfun.o(i.InputOldReference))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = InputOldReference &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
</UL>

<P><STRONG><a name="[232]"></a>InputOldTradeDate</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, tradeassistfun.o(i.InputOldTradeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = InputOldTradeDate &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[233]"></a>InputOldVoucher</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, tradeassistfun.o(i.InputOldVoucher))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = InputOldVoucher &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
</UL>

<P><STRONG><a name="[f9]"></a>InputPassWordFun</STRONG> (Thumb, 954 bytes, Stack size 136 bytes, tradeassistfun.o(i.InputPassWordFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = InputPassWordFun &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagOpen
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontBlack
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_wait_keytone_over
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_check_number_key
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[234]"></a>InputPassWordFun_offline</STRONG> (Thumb, 620 bytes, Stack size 120 bytes, tradeassistfun.o(i.InputPassWordFun_offline))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = InputPassWordFun_offline &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagOpen
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_wait_keytone_over
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_check_number_key
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLinePlainPin
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
</UL>

<P><STRONG><a name="[47]"></a>InquiryIDOperInfor</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, flash_oper.o(i.InquiryIDOperInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InquiryIDOperInfor &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermPassWordCheck
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermParFuntion
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
</UL>

<P><STRONG><a name="[235]"></a>InquiryOperIDCnt</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, flash_oper.o(i.InquiryOperIDCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = InquiryOperIDCnt &rArr; Hex_to_Bcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex_to_Bcd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
</UL>

<P><STRONG><a name="[1e4]"></a>InsertCardProc</STRONG> (Thumb, 816 bytes, Stack size 96 bytes, emvinsertcard.o(i.InsertCardProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 9456<LI>Call Chain = InsertCardProc &rArr; EmvLib_AppSel &rArr; SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccOpen
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSelForLog
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEmvTranType
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTermCapForApp
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EcAppQue
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayICCProcessing
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_SearchBlackList
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
</UL>

<P><STRONG><a name="[21e]"></a>IsConstructedTag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, emvproc.o(i.IsConstructedTag))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
</UL>

<P><STRONG><a name="[22d]"></a>IsExistEcSupportIndicator</STRONG> (Thumb, 86 bytes, Stack size 272 bytes, appselect.o(i.IsExistEcSupportIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = IsExistEcSupportIndicator &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
</UL>

<P><STRONG><a name="[23a]"></a>IssuertoCardScriptProcessing</STRONG> (Thumb, 1156 bytes, Stack size 600 bytes, terminalandcardaction.o(i.IssuertoCardScriptProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 2688<LI>Call Chain = IssuertoCardScriptProcessing &rArr; DirectSendToCard &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenIssuerResult
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectSendToCard
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcIssuerLen
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcBerTlvLen
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[23d]"></a>JSON_packet</STRONG> (Thumb, 830 bytes, Stack size 5056 bytes, p8583_trade.o(i.JSON_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144<LI>Call Chain = JSON_packet &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
</UL>

<P><STRONG><a name="[1f9]"></a>LCD_Display</STRONG> (Thumb, 280 bytes, Stack size 168 bytes, tradeassistfun.o(i.LCD_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + In Cycle
<LI>Call Chain = LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[cb]"></a>Lcd234etClear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appapi.o(i.Lcd234etClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lcd234etClear &rArr; Lib_ScrClrLine
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[72]"></a>LcdClear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, appapi.o(i.LcdClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LcdClear &rArr; Lib_ScrCls
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteErrorWarn
</UL>

<P><STRONG><a name="[115]"></a>LcdClearline</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, appapi.o(i.LcdClearline))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LcdClearline &rArr; Lib_ScrClrArea
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>

<P><STRONG><a name="[229]"></a>Lib_3Des</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, dll.o(i.Lib_3Des))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_3Des
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
</UL>

<P><STRONG><a name="[399]"></a>Lib_AppInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dll.o(i.Lib_AppInit))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Lib_BattVol</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_BattVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_BattVol
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
</UL>

<P><STRONG><a name="[6b]"></a>Lib_Beep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dll.o(i.Lib_Beep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_Beep
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[2b9]"></a>Lib_BkpWrite</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_BkpWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_BkpWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
</UL>

<P><STRONG><a name="[33d]"></a>Lib_CheckNetwordMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_CheckNetwordMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_CheckNetwordMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[a6]"></a>Lib_DelICCardAidListRecordAll</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_DelICCardAidListRecordAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_DelICCardAidListRecordAll
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[a5]"></a>Lib_DelICCardAidRecordAll</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_DelICCardAidRecordAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_DelICCardAidRecordAll
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[a4]"></a>Lib_DelICCardCapkRecordAll</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_DelICCardCapkRecordAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_DelICCardCapkRecordAll
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCoreCapkInfo
</UL>

<P><STRONG><a name="[390]"></a>Lib_DelayMs</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_InputAmt
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
</UL>

<P><STRONG><a name="[22b]"></a>Lib_Des</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, dll.o(i.Lib_Des))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lib_Des &rArr; Lib_des
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_des
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
</UL>

<P><STRONG><a name="[290]"></a>Lib_DownLoadPara</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_DownLoadPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_DownLoadPara
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[353]"></a>Lib_DspQRcode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dll.o(i.Lib_DspQRcode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_DspQRcode
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
</UL>

<P><STRONG><a name="[36e]"></a>Lib_EleSignature</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_EleSignature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_EleSignature
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[361]"></a>Lib_Erase_pFlash_Sector</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dll.o(i.Lib_Erase_pFlash_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_Erase_pFlash_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[10b]"></a>Lib_FileClose</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_FileClose))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
</UL>

<P><STRONG><a name="[391]"></a>Lib_FileOpen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_FileOpen))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat
</UL>

<P><STRONG><a name="[165]"></a>Lib_FileRead</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_FileRead))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
</UL>

<P><STRONG><a name="[240]"></a>Lib_FileRemove</STRONG> (Thumb, 200 bytes, Stack size 872 bytes, p8583_assist.o(i.Lib_FileRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = Lib_FileRemove &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReverseInfor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReverseInfor
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[383]"></a>Lib_FileRemove_EMV</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_FileRemove_EMV))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[164]"></a>Lib_FileSeek</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_FileSeek))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
</UL>

<P><STRONG><a name="[93]"></a>Lib_FlashGet_Byte</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_FlashGet_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_FlashGet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintCardNumSwitch
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCFreeSigntSwitch
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignNameSwitch
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleSwitch
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPOSLockInfor
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyTone
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICSaleSwitch
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDefaultTrade
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleVoidSwitch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleVoidBrushSwitch
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleD0Switch
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCancelPwordSwitch
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundSwitch
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPBOCDemotion
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanPrintDetailSwitch
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanLogoffSwitch
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswSwitch
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstDownLoadFlag
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCDCVMSwitch
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBalanceSwitch
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidSwitch
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidPwordSwitch
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteSwitch
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteBrushSwitch
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelSwitch
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelPwordSwitch
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuTHSwitch
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecvTimeOutReverseSwitch
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInsertMode
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstPlaycardsSwitch
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTransModeSwitch
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSetRun1
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRun1
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[4e]"></a>Lib_FlashGet_Str</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_FlashGet_Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoIndex
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoData
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoCount
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailIndex
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailData
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailCount
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReverseInfor
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetQrCodePrintPageCnt
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintTitle
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintPageCnt
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastPrintTraceNo
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardCapkIndex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardCapkCount
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidListIndex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidListCount
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreeSignAmount
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswAmount
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEndPrintInfor
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentBatchNum
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidIndex
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidCount
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCapkData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelIndex
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelData
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthIndex
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidListData
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintDegree
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsDownFlg
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTPDUName
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReSendCnt
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLimitMoney
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountryCode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEmvParameter
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort1
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP1
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetworkSelection
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetAPN
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTradeData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCCIDNum
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryOperIDCnt
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNameEnglish
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort2
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort1
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP2
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP1
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSubAppName
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInsertAdd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperInfor
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperInfor
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeTriggerWay
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardParam
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidIndex
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidData
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeWay
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidCount
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection4
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBkpRam
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsAppVer
</UL>

<P><STRONG><a name="[302]"></a>Lib_FlashMess_Save</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, dll.o(i.Lib_FlashMess_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveVoidRecord
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodePayRecord
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleRecord
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSALE_FailRecord
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRefundRecord
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompleteVoidRecord
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompleteRecord
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCancelRecord
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthRecord
</UL>

<P><STRONG><a name="[95]"></a>Lib_FlashSet_Byte</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_FlashSet_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSignNameSwitch
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreeSigntSwitch
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreePswSwitch
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCDCVMSwitch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveFirstDownLoadFlag
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTrackEncryptSwitch
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveZMangPwordSwitch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleVoidSwitch
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleSwitch
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleCancelPwordSwitch
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRefundSwitch
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecvTimeOutReverseSwitch
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintCardNumSwitch
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLockInfor
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJieShuanPrintDetailSwitch
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJieShuanLogoffSwitch
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInsertMode
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveFirstPlaycardsSwitch
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultTrade
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBalanceSwitch
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteVoidSwitch
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteVoidPwordSwitch
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteSwitch
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCancelSwitch
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCancelPwordSwitch
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuTHSwitch
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSelfSelectedFlgInfor
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveKeyTone
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveICSaleSwitch
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSetRun1
</UL>

<P><STRONG><a name="[4f]"></a>Lib_FlashSet_Str</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dll.o(i.Lib_FlashSet_Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReverseInfor
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLastPrintTraceNo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEndPrintInfor
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoData
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailData
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidData
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCapkData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthData
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidListData
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintDegree
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection16
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSettleData
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreeSigntAmount
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreePswAmount
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLoginInfor
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTraceNo
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitNum
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitName
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePosId
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIDOperInfor
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTradeData
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentBatchNum
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWaitTime
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitNameEnglish
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTPDUName
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort2
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort1
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP2
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP1
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSubAppName
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIPPort1
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIPPort
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIP1
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIP
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReSendCnt
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintTitle
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintPageCnt
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOperLoginInfor
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetAPN
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLimitMoney
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInsertAdd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperInfor
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperInfor
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveICCardParam
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidData
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_byte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsFname
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsAppname
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodeWay
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodeTriggerWay
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSafeVerCRC
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQrCodePrintPageCnt
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePosVer
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetworkSelection
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppVer
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBkpRam
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUpDataFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsStartTimer
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsEndTimer
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsDownFlg
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsDisInfor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsAppVer
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection9
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection8
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection71
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection7
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection5
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection2
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection172
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection171
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection15
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection14
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection13
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection12
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection10
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection1
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemSafety
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystemInfor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDirectorInfor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init88OperInfor
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInitState
</UL>

<P><STRONG><a name="[2e1]"></a>Lib_GetHW_VER</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_GetHW_VER))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GetHW_VER
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[73]"></a>Lib_GetTime</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObtTimeData
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[39e]"></a>Lib_GunOff</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_GunOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GunOff
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[39b]"></a>Lib_GunOpen</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_GunOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GunOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[39d]"></a>Lib_GunOver</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_GunOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GunOver
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[39f]"></a>Lib_GunRead</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dll.o(i.Lib_GunRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_GunRead
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[39c]"></a>Lib_GunStart</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_GunStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_GunStart
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
</UL>

<P><STRONG><a name="[b9]"></a>Lib_Hash</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dll.o(i.Lib_Hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_Hash
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[aa]"></a>Lib_IFlashInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dll.o(i.Lib_IFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_IFlashInit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[3a1]"></a>Lib_IccClose</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_IccClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_IccClose
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_close
</UL>

<P><STRONG><a name="[3a2]"></a>Lib_IccCommand</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, dll.o(i.Lib_IccCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_IccCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_command_APDU
</UL>

<P><STRONG><a name="[398]"></a>Lib_IccDetect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_IccDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_IccDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[236]"></a>Lib_IccOpen</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dll.o(i.Lib_IccOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_IccOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[14a]"></a>Lib_IccSetAutoResp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.Lib_IccSetAutoResp))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
</UL>

<P><STRONG><a name="[c7]"></a>Lib_KbFlush</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dll.o(i.Lib_KbFlush))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_KbFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>

<P><STRONG><a name="[6d]"></a>Lib_KbGetKey</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_KbGetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_KbGetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>

<P><STRONG><a name="[80]"></a>Lib_KbInputFuntion</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, dll.o(i.Lib_KbInputFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_KbInputFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
</UL>

<P><STRONG><a name="[84]"></a>Lib_KbInputFuntionHz</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, dll.o(i.Lib_KbInputFuntionHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_KbInputFuntionHz
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
</UL>

<P><STRONG><a name="[28f]"></a>Lib_KbMute</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_KbMute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_KbMute
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[6c]"></a>Lib_Kbhit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_Kbhit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_Kbhit
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>

<P><STRONG><a name="[243]"></a>Lib_LcdDrawBox</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, emvport.o(i.Lib_LcdDrawBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Lib_LcdDrawBox &rArr; Pane &rArr; Lib_ScrPLot
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pane
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
</UL>

<P><STRONG><a name="[2e9]"></a>Lib_LedOff</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_LedOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_LedOff
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[2e8]"></a>Lib_LedOn</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_LedOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_LedOn
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[71]"></a>Lib_MagClose</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_MagClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_MagClose
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[c4]"></a>Lib_MagOpen</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_MagOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_MagOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[89]"></a>Lib_MagRead</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dll.o(i.Lib_MagRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_MagRead
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
</UL>

<P><STRONG><a name="[8a]"></a>Lib_MagReset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_MagReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_MagReset
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[2e5]"></a>Lib_MagSwiped</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_MagSwiped))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_MagSwiped
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[4c]"></a>Lib_MmiDisplay</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, var.o(i.Lib_MmiDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSetMmi
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSwitchMmi
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_InputMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayICCProcessing
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_clss_err
</UL>

<P><STRONG><a name="[106]"></a>Lib_NetwordSelection</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_NetwordSelection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_NetwordSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[195]"></a>Lib_PEDDes</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, dll.o(i.Lib_PEDDes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PEDDes
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[be]"></a>Lib_PEDGetMac</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, dll.o(i.Lib_PEDGetMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PEDGetMac
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
</UL>

<P><STRONG><a name="[151]"></a>Lib_PEDGetRand</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dll.o(i.Lib_PEDGetRand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lib_PEDGetRand &rArr; Pci_GetRnd
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pci_GetRnd
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetRandNumber
</UL>

<P><STRONG><a name="[24e]"></a>Lib_PEDReadMkeyID</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_PEDReadMkeyID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PEDReadMkeyID
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
</UL>

<P><STRONG><a name="[11e]"></a>Lib_PEDReadMkeyMode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_PEDReadMkeyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PEDReadMkeyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DesSetFuntion
</UL>

<P><STRONG><a name="[34b]"></a>Lib_PEDWriteMKeyID</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dll.o(i.Lib_PEDWriteMKeyID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PEDWriteMKeyID
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
</UL>

<P><STRONG><a name="[11f]"></a>Lib_PEDWriteMkeyMode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dll.o(i.Lib_PEDWriteMkeyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PEDWriteMkeyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DesSetFuntion
</UL>

<P><STRONG><a name="[24f]"></a>Lib_PEDWriteWorkKey</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, dll.o(i.Lib_PEDWriteWorkKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PEDWriteWorkKey
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
</UL>

<P><STRONG><a name="[22a]"></a>Lib_PEDWriteWorkMKey</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, dll.o(i.Lib_PEDWriteWorkMKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PEDWriteWorkMKey
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
</UL>

<P><STRONG><a name="[246]"></a>Lib_PciGetPin</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, emvport.o(i.Lib_PciGetPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 12460<LI>Call Chain = Lib_PciGetPin &rArr; TRANS_Sign &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
</UL>

<P><STRONG><a name="[249]"></a>Lib_PciOffLineEncPin</STRONG> (Thumb, 174 bytes, Stack size 568 bytes, emvport.o(i.Lib_PciOffLineEncPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = Lib_PciOffLineEncPin &rArr; InputPassWordFun_offline &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RSAPublicKeyDecrypt
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
</UL>

<P><STRONG><a name="[24a]"></a>Lib_PciOffLinePlainPin</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, emvport.o(i.Lib_PciOffLinePlainPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 2088<LI>Call Chain = Lib_PciOffLinePlainPin &rArr; EMVVerify &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
</UL>

<P><STRONG><a name="[2e7]"></a>Lib_PiccCheck</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dll.o(i.Lib_PiccCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_PiccCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[2e6]"></a>Lib_PiccClose</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dll.o(i.Lib_PiccClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PiccClose
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[2a1]"></a>Lib_PiccCommand</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dll.o(i.Lib_PiccCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_PiccCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
</UL>

<P><STRONG><a name="[2e2]"></a>Lib_PiccOpen</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dll.o(i.Lib_PiccOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PiccOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[36f]"></a>Lib_PictureCompress</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dll.o(i.Lib_PictureCompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PictureCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[2bb]"></a>Lib_PictureUnCompress</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, dll.o(i.Lib_PictureUnCompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PictureUnCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[2af]"></a>Lib_PrnFontSet</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dll.o(i.Lib_PrnFontSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PrnFontSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
</UL>

<P><STRONG><a name="[357]"></a>Lib_PrnGraySet</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_PrnGraySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PrnGraySet
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[129]"></a>Lib_PrnInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_PrnInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PrnInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
</UL>

<P><STRONG><a name="[2b0]"></a>Lib_PrnStart</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, dll.o(i.Lib_PrnStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PrnStart
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
</UL>

<P><STRONG><a name="[6e]"></a>Lib_PrnStatus</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_PrnStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_PrnStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
</UL>

<P><STRONG><a name="[24b]"></a>Lib_PrnStr</STRONG> (Thumb, 114 bytes, Stack size 544 bytes, dll.o(i.Lib_PrnStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Lib_PrnStr &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
</UL>

<P><STRONG><a name="[2b7]"></a>Lib_PrnZoomSet</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, dll.o(i.Lib_PrnZoomSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_PrnZoomSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
</UL>

<P><STRONG><a name="[102]"></a>Lib_RSAPublicKeyDecrypt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dll.o(i.Lib_RSAPublicKeyDecrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_RSAPublicKeyDecrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenMKAndEnc
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[2ef]"></a>Lib_ReadAppVerInfor</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dll.o(i.Lib_ReadAppVerInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_ReadAppVerInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[253]"></a>Lib_ReadSN</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_ReadSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_ReadSN
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField63
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField62
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField56
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
</UL>

<P><STRONG><a name="[fc]"></a>Lib_Read_pFlash</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, dll.o(i.Lib_Read_pFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_Read_pFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispLog
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_Crc_Calculate
</UL>

<P><STRONG><a name="[142]"></a>Lib_RemoteUpdate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_RemoteUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_RemoteUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[25b]"></a>Lib_SM4HardSn_Encryption</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, dll.o(i.Lib_SM4HardSn_Encryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_SM4HardSn_Encryption
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
</UL>

<P><STRONG><a name="[13e]"></a>Lib_SaveICCardAidListRecord</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_SaveICCardAidListRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_SaveICCardAidListRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[172]"></a>Lib_SaveICCardAidRecord</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_SaveICCardAidRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_SaveICCardAidRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddApp
</UL>

<P><STRONG><a name="[173]"></a>Lib_SaveICCardCapkRecord</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_SaveICCardCapkRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_SaveICCardCapkRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddCapk
</UL>

<P><STRONG><a name="[79]"></a>Lib_ScrAttrSet</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_ScrAttrSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_ScrAttrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
</UL>

<P><STRONG><a name="[8e]"></a>Lib_ScrBackLight</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dll.o(i.Lib_ScrBackLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_ScrBackLight
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[148]"></a>Lib_ScrClrArea</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrClrArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrClrArea
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
</UL>

<P><STRONG><a name="[6a]"></a>Lib_ScrClrLine</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrClrLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrClrLine
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldReference
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_InputMode
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayICCProcessing
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrBelow
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_clss_err
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[cf]"></a>Lib_ScrClrOneLine</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrClrOneLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrClrOneLine
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
</UL>

<P><STRONG><a name="[8b]"></a>Lib_ScrCls</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_ScrCls))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_ScrCls
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[145]"></a>Lib_ScrDrawLine</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
</UL>

<P><STRONG><a name="[12a]"></a>Lib_ScrDrawLogo</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrDrawLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrDrawLogo
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
</UL>

<P><STRONG><a name="[12c]"></a>Lib_ScrDrawLogoxy</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrDrawLogoxy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrDrawLogoxy
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispLog
</UL>

<P><STRONG><a name="[7a]"></a>Lib_ScrFontSet</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dll.o(i.Lib_ScrFontSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_ScrFontSet
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
</UL>

<P><STRONG><a name="[78]"></a>Lib_ScrGotoxy</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dll.o(i.Lib_ScrGotoxy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_ScrGotoxy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
</UL>

<P><STRONG><a name="[297]"></a>Lib_ScrPLot</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dll.o(i.Lib_ScrPLot))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_ScrPLot
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pane
</UL>

<P><STRONG><a name="[7b]"></a>Lib_ScrPrintf</STRONG> (Thumb, 120 bytes, Stack size 1064 bytes, dll.o(i.Lib_ScrPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = Lib_ScrPrintf &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
</UL>

<P><STRONG><a name="[75]"></a>Lib_ScrPrintxy</STRONG> (Thumb, 126 bytes, Stack size 536 bytes, dll.o(i.Lib_ScrPrintxy))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspRedAmount
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubShowTitle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_disp
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
</UL>

<P><STRONG><a name="[147]"></a>Lib_SetFontBlack</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_SetFontBlack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_SetFontBlack
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspRedAmount
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
</UL>

<P><STRONG><a name="[118]"></a>Lib_SetFontColr</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_SetFontColr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_SetFontColr
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspRedAmount
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSwitchMmi
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
</UL>

<P><STRONG><a name="[350]"></a>Lib_SetTime</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
</UL>

<P><STRONG><a name="[345]"></a>Lib_SleepCtl</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dll.o(i.Lib_SleepCtl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_SleepCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
</UL>

<P><STRONG><a name="[92]"></a>Lib_SystemTimeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_SystemTimeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_SystemTimeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[c5]"></a>Lib_TimerCheck</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_TimerCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_TimerCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>

<P><STRONG><a name="[c6]"></a>Lib_TimerSet</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dll.o(i.Lib_TimerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_TimerSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSequenceNumber
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAckAndRet
</UL>

<P><STRONG><a name="[370]"></a>Lib_TradeFeatureCode</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dll.o(i.Lib_TradeFeatureCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_TradeFeatureCode
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
</UL>

<P><STRONG><a name="[373]"></a>Lib_UpdataTerm_MK_COM</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_UpdataTerm_MK_COM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_UpdataTerm_MK_COM
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[374]"></a>Lib_UpdataTerm_MK_USB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_UpdataTerm_MK_USB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_UpdataTerm_MK_USB
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[282]"></a>Lib_WNetCheckSim</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_WNetCheckSim))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WNetCheckSim
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[254]"></a>Lib_WNetGetLocation</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_WNetGetLocation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WNetGetLocation
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
</UL>

<P><STRONG><a name="[58]"></a>Lib_WNetTcpClose</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dll.o(i.Lib_WNetTcpClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WNetTcpClose
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathcRefundProc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[33e]"></a>Lib_WNetTcpConnect</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, dll.o(i.Lib_WNetTcpConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_WNetTcpConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[2ec]"></a>Lib_WNetTcpRecv</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, dll.o(i.Lib_WNetTcpRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_WNetTcpRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvPacket_POSP
</UL>

<P><STRONG><a name="[33b]"></a>Lib_WNetTcpSend</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dll.o(i.Lib_WNetTcpSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_WNetTcpSend
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGSMData2
</UL>

<P><STRONG><a name="[2e3]"></a>Lib_WakeUp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_WakeUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[108]"></a>Lib_WiFiModeInterface</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_WiFiModeInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_WiFiModeInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[367]"></a>Lib_WriteAPP</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Lib_WriteAPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lib_WriteAPP
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[365]"></a>Lib_WriteRemoteFlag</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dll.o(i.Lib_WriteRemoteFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WriteRemoteFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[364]"></a>Lib_WriteRemoteInfor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dll.o(i.Lib_WriteRemoteInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_WriteRemoteInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[362]"></a>Lib_Write_pFlash</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dll.o(i.Lib_Write_pFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_Write_pFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[23f]"></a>Lib_des</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dll.o(i.Lib_des))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lib_des
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Des
</UL>

<P><STRONG><a name="[1fa]"></a>Lib_wait_keytone_over</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dll.o(i.Lib_wait_keytone_over))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lib_wait_keytone_over
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
</UL>

<P><STRONG><a name="[24d]"></a>LogonInitKey</STRONG> (Thumb, 260 bytes, Stack size 136 bytes, p8583_proc.o(i.LogonInitKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LogonInitKey &rArr; SaveTrackEncryptSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTrackEncryptSwitch
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDWriteWorkKey
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDReadMkeyID
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[111]"></a>LongToDec</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, qpboctran.o(i.LongToDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LongToDec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdAmount
</UL>

<P><STRONG><a name="[39a]"></a>Los_ReadAppUpdataFlag</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dll.o(i.Los_ReadAppUpdataFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Los_ReadAppUpdataFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ee]"></a>Los_WriteAppUpdataFlag</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dll.o(i.Los_WriteAppUpdataFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Los_WriteAppUpdataFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[251]"></a>MMI_ReadCard_Dsp</STRONG> (Thumb, 510 bytes, Stack size 104 bytes, tradeassistfun.o(i.MMI_ReadCard_Dsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = MMI_ReadCard_Dsp &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontBlack
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[252]"></a>MackField21</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, p8583_proc.o(i.MackField21))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MackField21 &rArr; GetCCIDNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetGetLocation
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCCIDNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[255]"></a>MackField46</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, p8583_proc.o(i.MackField46))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MackField46 &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[256]"></a>MackField48</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, p8583_proc.o(i.MackField48))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MackField48 &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsciiString
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[257]"></a>MackField55</STRONG> (Thumb, 878 bytes, Stack size 384 bytes, p8583_proc.o(i.MackField55))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MackField55 &rArr; GetUnitName &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AscToBcd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[259]"></a>MackField56</STRONG> (Thumb, 206 bytes, Stack size 328 bytes, p8583_proc.o(i.MackField56))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = MackField56 &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[25a]"></a>MackField59</STRONG> (Thumb, 316 bytes, Stack size 336 bytes, p8583_proc.o(i.MackField59))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MackField59 &rArr; Lib_SM4HardSn_Encryption
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SM4HardSn_Encryption
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[25c]"></a>MackField60</STRONG> (Thumb, 798 bytes, Stack size 48 bytes, p8583_proc.o(i.MackField60))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MackField60 &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[25d]"></a>MackField61</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, p8583_proc.o(i.MackField61))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MackField61 &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[25e]"></a>MackField62</STRONG> (Thumb, 256 bytes, Stack size 200 bytes, p8583_proc.o(i.MackField62))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MackField62 &rArr; Lib_ReadSN
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[25f]"></a>MackField63</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, p8583_proc.o(i.MackField63))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MackField63 &rArr; Hex_to_Bcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex_to_Bcd
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[260]"></a>ManageMenu</STRONG> (Thumb, 384 bytes, Stack size 96 bytes, menu.o(i.ManageMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 20400<LI>Call Chain = ManageMenu &rArr; RegisterMenu &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsDownFlg
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_NetwordSelection
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_ver
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegisterMenu
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[26a]"></a>ManageVerifyPasswrod</STRONG> (Thumb, 260 bytes, Stack size 120 bytes, loginfun.o(i.ManageVerifyPasswrod))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ManageVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIDOperInfor
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMangeMenu
</UL>

<P><STRONG><a name="[1ef]"></a>MatchTrack2AndPan</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, emvport.o(i.MatchTrack2AndPan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MatchTrack2AndPan &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
</UL>

<P><STRONG><a name="[26c]"></a>MerchantsParaSet</STRONG> (Thumb, 386 bytes, Stack size 408 bytes, loginfun.o(i.MerchantsParaSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = MerchantsParaSet &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitNum
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitName
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePosId
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitNameEnglish
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSubAppName
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNameEnglish
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSubAppName
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
</UL>

<P><STRONG><a name="[272]"></a>MianMenu</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, menu.o(i.MianMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 22000<LI>Call Chain = MianMenu &rArr; OtherMenu &rArr; TRANS_Void &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeWay
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237]"></a>ModifyTermCapForApp</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, emvinsertcard.o(i.ModifyTermCapForApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ModifyTermCapForApp &rArr; EmvLib_SetTLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[1ad]"></a>My_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, p8583_proc.o(i.My_printf))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[278]"></a>NetworkSelectionFunction</STRONG> (Thumb, 498 bytes, Stack size 72 bytes, menu.o(i.NetworkSelectionFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = NetworkSelectionFunction &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetworkSelection
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetAPN
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetworkSelection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[5c]"></a>NoConstructAllSeparateBER_TLV</STRONG> (Thumb, 712 bytes, Stack size 64 bytes, emvpublic.o(i.NoConstructAllSeparateBER_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NoConstructAllSeparateBER_TLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datebcdtobin
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearZeroAndFF
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTagLen
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
</UL>

<P><STRONG><a name="[27c]"></a>ObtTimeData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, p8583_assist.o(i.ObtTimeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ObtTimeData &rArr; Api_AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
</UL>

<P><STRONG><a name="[57]"></a>OnlineDownOrUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvport.o(i.OnlineDownOrUp))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>

<P><STRONG><a name="[269]"></a>OnlineLoadMk</STRONG> (Thumb, 572 bytes, Stack size 1200 bytes, emvproc.o(i.OnlineLoadMk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8740<LI>Call Chain = OnlineLoadMk &rArr; FinishDownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_3Des
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDWriteWorkMKey
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenMKAndEnc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[27f]"></a>OnlinePINProcessing</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, cardholderverify.o(i.OnlinePINProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = OnlinePINProcessing &rArr;  cEmvLib_GetHolderPwd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>

<P><STRONG><a name="[280]"></a>OnlinePINProcessing_EC</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, terminalandcardaction.o(i.OnlinePINProcessing_EC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = OnlinePINProcessing_EC &rArr;  cEmvLib_GetHolderPwd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
</UL>

<P><STRONG><a name="[138]"></a>OnlineTransProc</STRONG> (Thumb, 532 bytes, Stack size 48 bytes, p8583_proc.o(i.OnlineTransProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 7508<LI>Call Chain = OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjExitReversal
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTradeData
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineDownOrUp
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetCheckSim
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTradeData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
</UL>

<P><STRONG><a name="[285]"></a>OperRegisterFuntion</STRONG> (Thumb, 428 bytes, Stack size 80 bytes, loginfun.o(i.OperRegisterFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 18448 + In Cycle
<LI>Call Chain = OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveOperLoginInfor
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermParFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegisterMenu
</UL>

<P><STRONG><a name="[28a]"></a>OperVerifyPasswrod</STRONG> (Thumb, 438 bytes, Stack size 128 bytes, loginfun.o(i.OperVerifyPasswrod))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = OperVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIDOperInfor
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
</UL>

<P><STRONG><a name="[28b]"></a>Optional_Merchant_Menu_Processing</STRONG> (Thumb, 606 bytes, Stack size 208 bytes, p8583_proc.o(i.Optional_Merchant_Menu_Processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = Optional_Merchant_Menu_Processing &rArr; menumodle &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
</UL>

<P><STRONG><a name="[28c]"></a>OtherFunSetMenu</STRONG> (Thumb, 318 bytes, Stack size 104 bytes, menu.o(i.OtherFunSetMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 6776<LI>Call Chain = OtherFunSetMenu &rArr; ResetFlash &rArr; Api_flash_init &rArr; ResetflashSection1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbMute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyTone
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTraceNo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveKeyTone
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DownLoadPara
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>

<P><STRONG><a name="[277]"></a>OtherMenu</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, menu.o(i.OtherMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 21936<LI>Call Chain = OtherMenu &rArr; TRANS_Void &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
</UL>

<P><STRONG><a name="[244]"></a>Pane</STRONG> (Thumb, 554 bytes, Stack size 56 bytes, emvport.o(i.Pane))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Pane &rArr; Lib_ScrPLot
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPLot
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_LcdDrawBox
</UL>

<P><STRONG><a name="[88]"></a>ParaInit</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, p8583_trade.o(i.ParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ParaInit &rArr; EmvLib_GetParam &rArr; GetICCardParam &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentBatchNum
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDReadMkeyMode
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitTime
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTPDUName
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountryCode
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetParam
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
</UL>

<P><STRONG><a name="[298]"></a>ParmDownload_Request</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, tms.o(i.ParmDownload_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 7572<LI>Call Chain = ParmDownload_Request &rArr; ParmDownload_RequestEnd &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
</UL>

<P><STRONG><a name="[29b]"></a>ParmDownload_RequestEnd</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, tms.o(i.ParmDownload_RequestEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 7540<LI>Call Chain = ParmDownload_RequestEnd &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
</UL>

<P><STRONG><a name="[29c]"></a>PasswordMangeMenu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, menu.o(i.PasswordMangeMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = PasswordMangeMenu &rArr; SysVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>

<P><STRONG><a name="[245]"></a>Pci_GetRnd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, dll.o(i.Pci_GetRnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Pci_GetRnd
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDGetRand
</UL>

<P><STRONG><a name="[2a0]"></a>Picc_command_APDU_sim</STRONG> (Thumb, 220 bytes, Stack size 664 bytes, qpbocport.o(i.Picc_command_APDU_sim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PiccCommand
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
</UL>

<P><STRONG><a name="[2a2]"></a>Pospara_download</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, menu.o(i.Pospara_download))
<BR><BR>[Stack]<UL><LI>Max Depth = 7556<LI>Call Chain = Pospara_download &rArr; TRANS_DownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[2a5]"></a>Pre8583Packet</STRONG> (Thumb, 794 bytes, Stack size 56 bytes, p8583_proc.o(i.Pre8583Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = Pre8583Packet &rArr; GetTxnTableIndex &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelBitmapField
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBitmapField
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[274]"></a>Preauthorization</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, menu.o(i.Preauthorization))
<BR><BR>[Stack]<UL><LI>Max Depth = 21872<LI>Call Chain = Preauthorization &rArr; TRANS_AuthCompleteVoid &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
</UL>

<P><STRONG><a name="[2ac]"></a>PrestoreSweepCodeLogFile</STRONG> (Thumb, 190 bytes, Stack size 280 bytes, p8583_assist.o(i.PrestoreSweepCodeLogFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = PrestoreSweepCodeLogFile &rArr; SaveSweepCodePayRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodePayRecord
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
</UL>

<P><STRONG><a name="[2ae]"></a>PrintBatchTicket</STRONG> (Thumb, 3852 bytes, Stack size 240 bytes, p8583_assist.o(i.PrintBatchTicket))
<BR><BR>[Stack]<UL><LI>Max Depth = 2080<LI>Call Chain = PrintBatchTicket &rArr; GetTotleList &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStart
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnFontSet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentBatchNum
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
</UL>

<P><STRONG><a name="[296]"></a>PrintMenu</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, menu.o(i.PrintMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 9688<LI>Call Chain = PrintMenu &rArr; RPrintLastTrade &rArr; RPrintWantonlyTrade &rArr; SeeKOriginalTradeInfor &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[2b3]"></a>PrintTradeList</STRONG> (Thumb, 2528 bytes, Stack size 1920 bytes, p8583_assist.o(i.PrintTradeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 2568<LI>Call Chain = PrintTradeList &rArr; CheckTradeExist &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStart
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
</UL>

<P><STRONG><a name="[2b4]"></a>Print_SweepCodeTicket</STRONG> (Thumb, 2408 bytes, Stack size 256 bytes, p8583_assist.o(i.Print_SweepCodeTicket))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Print_SweepCodeTicket &rArr; Api_Check_Print_Staut &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLastPrintTraceNo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEndPrintInfor
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnZoomSet
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStart
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnFontSet
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_BkpWrite
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetQrCodePrintPageCnt
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintTitle
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEndPrintInfor
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintSweepCodeTicket
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
</UL>

<P><STRONG><a name="[2ba]"></a>Print_TradeTicket</STRONG> (Thumb, 6906 bytes, Stack size 7208 bytes, p8583_assist.o(i.Print_TradeTicket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8784<LI>Call Chain = Print_TradeTicket &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLastPrintTraceNo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEndPrintInfor
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnZoomSet
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStart
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnFontSet
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PictureUnCompress
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_BkpWrite
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintTitle
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintPageCnt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintCardNumSwitch
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreeSignAmount
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswAmount
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEndPrintInfor
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCFreeSigntSwitch
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBankName
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT_Signer
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog2
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog1
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[281]"></a>ProcEmvTran</STRONG> (Thumb, 150 bytes, Stack size 248 bytes, emvinsertcard.o(i.ProcEmvTran))
<BR><BR>[Stack]<UL><LI>Max Depth = 7460<LI>Call Chain = ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetBalance
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsc0
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ProcTrans
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>

<P><STRONG><a name="[1aa]"></a>ProcReasonAdvice</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, terminalandcardaction.o(i.ProcReasonAdvice))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
</UL>

<P><STRONG><a name="[f7]"></a>PubAsc2Bcd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, qpboctran.o(i.PubAsc2Bcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PubAsc2Bcd &rArr; Api_AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[110]"></a>PubBcd2Asc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, qpboctran.o(i.PubBcd2Asc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PubBcd2Asc &rArr; Api_BcdToAsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdAmount
</UL>

<P><STRONG><a name="[f8]"></a>PubDispString</STRONG> (Thumb, 324 bytes, Stack size 112 bytes, emvport.o(i.PubDispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = PubDispString &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>

<P><STRONG><a name="[131]"></a>PubShowTitle</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, emvport.o(i.PubShowTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = PubShowTitle &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
</UL>

<P><STRONG><a name="[2c4]"></a>QPboc_CardAuth</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, qpboc.o(i.QPboc_CardAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 6276<LI>Call Chain = QPboc_CardAuth &rArr; __QPboc_CardAuth &rArr; OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__QPboc_CardAuth
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[2c6]"></a>QPboc_GetCvmType</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, qpboc.o(i.QPboc_GetCvmType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QPboc_GetCvmType
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[2c7]"></a>QPboc_InitApp</STRONG> (Thumb, 498 bytes, Stack size 848 bytes, qpboc.o(i.QPboc_InitApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 3008<LI>Call Chain = QPboc_InitApp &rArr; _cl_EmvGetProcessingOptions &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetRandNumber
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DolGetByTag
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVMMI_InputAmount
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
</UL>

<P><STRONG><a name="[2ca]"></a>QPboc_Proctrans</STRONG> (Thumb, 152 bytes, Stack size 128 bytes, qpboc.o(i.QPboc_Proctrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 3176<LI>Call Chain = QPboc_Proctrans &rArr; QPboc_ReadAppData &rArr; _cl_EmvReadRecord &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckAllSFI
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SearchExceptionList
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[2cd]"></a>QPboc_ReadAppData</STRONG> (Thumb, 984 bytes, Stack size 880 bytes, qpboc.o(i.QPboc_ReadAppData))
<BR><BR>[Stack]<UL><LI>Max Depth = 3048<LI>Call Chain = QPboc_ReadAppData &rArr; _cl_EmvReadRecord &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDataLen
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TruncatePad
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSFI
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
</UL>

<P><STRONG><a name="[2cb]"></a>QPboc_SearchExceptionList</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, qpboc.o(i.QPboc_SearchExceptionList))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
</UL>

<P><STRONG><a name="[2d2]"></a>QPboc_SetTransData</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, qpboc.o(i.QPboc_SetTransData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QPboc_SetTransData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[2d3]"></a>QProcEmvTran</STRONG> (Thumb, 1636 bytes, Stack size 752 bytes, qpboctran.o(i.QProcEmvTran))
<BR><BR>[Stack]<UL><LI>Max Depth = 7028<LI>Call Chain = QProcEmvTran &rArr; QPboc_CardAuth &rArr; __QPboc_CardAuth &rArr; OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTailChars
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCardFromTrack
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterTranProc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InceaseTraceNo
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SetTransData
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_GetCvmType
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_CardAuth
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_DelCurCandApp
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_clss_err
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubBcd2Asc
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubAsc2Bcd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdAmount
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
</UL>

<P><STRONG><a name="[136]"></a>QueryEmvCapk</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, emvproc.o(i.QueryEmvCapk))
<BR><BR>[Stack]<UL><LI>Max Depth = 7548<LI>Call Chain = QueryEmvCapk &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
</UL>

<P><STRONG><a name="[13c]"></a>QueryEmvParam</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, emvproc.o(i.QueryEmvParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 7548<LI>Call Chain = QueryEmvParam &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpackTlvData
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCommData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[2d6]"></a>QueryOperFuntion</STRONG> (Thumb, 374 bytes, Stack size 240 bytes, loginfun.o(i.QueryOperFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = QueryOperFuntion &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsciiString
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrOneLine
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck4
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryOperIDCnt
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TellerMenu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[2d8]"></a>QueryTradeList</STRONG> (Thumb, 2788 bytes, Stack size 1840 bytes, p8583_assist.o(i.QueryTradeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 2736<LI>Call Chain = QueryTradeList &rArr; RPrintSweepCodeTicket &rArr; Print_SweepCodeTicket &rArr; Api_Check_Print_Staut &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoIndex
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoData
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidIndex
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidCount
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelIndex
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelData
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthIndex
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintSweepCodeTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
</UL>

<P><STRONG><a name="[2da]"></a>QueryTradePool</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, p8583_assist.o(i.QueryTradePool))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872<LI>Call Chain = QueryTradePool &rArr; GetTotleList &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSummary
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
</UL>

<P><STRONG><a name="[2db]"></a>QueryTrans_Sale</STRONG> (Thumb, 322 bytes, Stack size 304 bytes, p8583_proc.o(i.QueryTrans_Sale))
<BR><BR>[Stack]<UL><LI>Max Depth = 9396<LI>Call Chain = QueryTrans_Sale &rArr; SweepCode_Query &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
</UL>

<P><STRONG><a name="[2b1]"></a>RPrintLastTrade</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, p8583_assist.o(i.RPrintLastTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 9664<LI>Call Chain = RPrintLastTrade &rArr; RPrintWantonlyTrade &rArr; SeeKOriginalTradeInfor &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastPrintTraceNo
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
</UL>

<P><STRONG><a name="[2d9]"></a>RPrintSweepCodeTicket</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, p8583_assist.o(i.RPrintSweepCodeTicket))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = RPrintSweepCodeTicket &rArr; Print_SweepCodeTicket &rArr; Api_Check_Print_Staut &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
</UL>

<P><STRONG><a name="[2b2]"></a>RPrintWantonlyTrade</STRONG> (Thumb, 6368 bytes, Stack size 8040 bytes, p8583_assist.o(i.RPrintWantonlyTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 9640<LI>Call Chain = RPrintWantonlyTrade &rArr; SeeKOriginalTradeInfor &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnZoomSet
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStart
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnFontSet
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PictureUnCompress
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintTitle
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintPageCnt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintCardNumSwitch
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBankName
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT_Signer
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintSweepCodeTicket
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
</UL>

<P><STRONG><a name="[2df]"></a>ReadBkpRam</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.ReadBkpRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadBkpRam &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[2e0]"></a>ReadMagCardTrack</STRONG> (Thumb, 1592 bytes, Stack size 200 bytes, tradeassistfun.o(i.ReadMagCardTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 9696<LI>Call Chain = ReadMagCardTrack &rArr; GetCard &rArr; InsertCardProc &rArr; EmvLib_AppSel &rArr; SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagSwiped
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagReset
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagOpen
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccOpen
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetHW_VER
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreePsw
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WakeUp
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PiccOpen
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PiccClose
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PiccCheck
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagClose
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_LedOn
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_LedOff
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstPlaycardsSwitch
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCursor
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_check_number_key
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[2ea]"></a>ReadReversalData</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, p8583_assist.o(i.ReadReversalData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1584<LI>Call Chain = ReadReversalData &rArr; CheckReverseInfor &rArr; GetSaleIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReverseInfor
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckReverseInfor
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
</UL>

<P><STRONG><a name="[13f]"></a>ReadTermAidList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, emvproc.o(i.ReadTermAidList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadTermAidList &rArr; GetICCardAidListIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidListIndex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICCardAidListCount
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAidListData
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
</UL>

<P><STRONG><a name="[2eb]"></a>RecvPacket_POSP</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tms.o(i.RecvPacket_POSP))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RecvPacket_POSP &rArr; Lib_WNetTcpRecv
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[261]"></a>RegisterMenu</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, menu.o(i.RegisterMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 20304<LI>Call Chain = RegisterMenu &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[1ee]"></a>RemoveTailChars</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, emvport.o(i.RemoveTailChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RemoveTailChars
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
</UL>

<P><STRONG><a name="[291]"></a>ResetFlash</STRONG> (Thumb, 488 bytes, Stack size 472 bytes, menu.o(i.ResetFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 6672<LI>Call Chain = ResetFlash &rArr; Api_flash_init &rArr; ResetflashSection1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadAppVerInfor
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitName
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort1
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP1
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetAPN
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsFname
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsAppname
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSelfSelectedFlgInfor
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSafeVerCRC
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePosVer
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetworkSelection
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppVer
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Los_WriteAppUpdataFlag
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_SavePBOCDefaultPara
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[94]"></a>ResetflashSection1</STRONG> (Thumb, 436 bytes, Stack size 6168 bytes, flash_oper.o(i.ResetflashSection1))
<BR><BR>[Stack]<UL><LI>Max Depth = 6184<LI>Call Chain = ResetflashSection1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[9f]"></a>ResetflashSection10</STRONG> (Thumb, 74 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection10))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection10 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a0]"></a>ResetflashSection12</STRONG> (Thumb, 72 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection12))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection12 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a1]"></a>ResetflashSection13</STRONG> (Thumb, 74 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection13))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection13 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a2]"></a>ResetflashSection14</STRONG> (Thumb, 72 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection14))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection14 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a3]"></a>ResetflashSection15</STRONG> (Thumb, 74 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection15))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection15 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a7]"></a>ResetflashSection16</STRONG> (Thumb, 72 bytes, Stack size 1216 bytes, flash_oper.o(i.ResetflashSection16))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ResetflashSection16 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a8]"></a>ResetflashSection171</STRONG> (Thumb, 72 bytes, Stack size 1808 bytes, flash_oper.o(i.ResetflashSection171))
<BR><BR>[Stack]<UL><LI>Max Depth = 1824<LI>Call Chain = ResetflashSection171 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[a9]"></a>ResetflashSection172</STRONG> (Thumb, 76 bytes, Stack size 1216 bytes, flash_oper.o(i.ResetflashSection172))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ResetflashSection172 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[97]"></a>ResetflashSection2</STRONG> (Thumb, 60 bytes, Stack size 408 bytes, flash_oper.o(i.ResetflashSection2))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ResetflashSection2 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[99]"></a>ResetflashSection4</STRONG> (Thumb, 492 bytes, Stack size 1216 bytes, flash_oper.o(i.ResetflashSection4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ResetflashSection4 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[9a]"></a>ResetflashSection5</STRONG> (Thumb, 40 bytes, Stack size 464 bytes, flash_oper.o(i.ResetflashSection5))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = ResetflashSection5 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[9b]"></a>ResetflashSection7</STRONG> (Thumb, 68 bytes, Stack size 608 bytes, flash_oper.o(i.ResetflashSection7))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = ResetflashSection7 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[9c]"></a>ResetflashSection71</STRONG> (Thumb, 54 bytes, Stack size 608 bytes, flash_oper.o(i.ResetflashSection71))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = ResetflashSection71 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
</UL>

<P><STRONG><a name="[9d]"></a>ResetflashSection8</STRONG> (Thumb, 74 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection8))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection8 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[9e]"></a>ResetflashSection9</STRONG> (Thumb, 74 bytes, Stack size 1408 bytes, flash_oper.o(i.ResetflashSection9))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ResetflashSection9 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
</UL>

<P><STRONG><a name="[2f6]"></a>ResolveHostPacket</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, p8583_proc.o(i.ResolveHostPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = ResolveHostPacket &rArr; SendBufToTerm &rArr; CalMAC &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init8583Packet
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583MsgID
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get8583Field
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[248]"></a>ResumeTitleDisplay</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, p8583_trade.o(i.ResumeTitleDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = ResumeTitleDisplay &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
</UL>

<P><STRONG><a name="[176]"></a>RetglCandidateListNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appselect.o(i.RetglCandidateListNum))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
</UL>

<P><STRONG><a name="[2f9]"></a>ReverseFuntion</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, p8583_proc.o(i.ReverseFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 4032<LI>Call Chain = ReverseFuntion &rArr; ReverseProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjExitReversal
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecvTimeOutReverseSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[284]"></a>ReverseProc</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, p8583_trade.o(i.ReverseProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4000<LI>Call Chain = ReverseProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReSendCnt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[5]"></a>SaveAppParamItem</STRONG> (Thumb, 512 bytes, Stack size 128 bytes, emvproc.o(i.SaveAppParamItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SaveAppParamItem &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsc0
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Char2Long
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvproc.o(i.DownLoadEmvParam)
</UL>
<P><STRONG><a name="[2f5]"></a>SaveAppVer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAppVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAppVer &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[2fb]"></a>SaveAuTHSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuTHSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuTHSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[2fc]"></a>SaveAuthCancelPwordSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuthCancelPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuthCancelPwordSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[2fd]"></a>SaveAuthCancelSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuthCancelSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuthCancelSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[2fe]"></a>SaveAuthCompleteSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuthCompleteSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuthCompleteSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[2ff]"></a>SaveAuthCompleteVoidPwordSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuthCompleteVoidPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuthCompleteVoidPwordSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[300]"></a>SaveAuthCompleteVoidSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveAuthCompleteVoidSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveAuthCompleteVoidSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[301]"></a>SaveAuthRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveAuthRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveAuthRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[303]"></a>SaveBalanceSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveBalanceSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveBalanceSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[304]"></a>SaveCancelRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveCancelRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveCancelRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[12]"></a>SaveCapkInfoItem</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, emvproc.o(i.SaveCapkInfoItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SaveCapkInfoItem &rArr; AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AscToBcd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvproc.o(i.QueryEmvCapk)
</UL>
<P><STRONG><a name="[305]"></a>SaveCompleteRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveCompleteRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveCompleteRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[306]"></a>SaveCompleteVoidRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveCompleteVoidRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveCompleteVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[3d]"></a>SaveCurrentBatchNum</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.SaveCurrentBatchNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveCurrentBatchNum &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBatch
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[52]"></a>SaveCurrentTraceNo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveCurrentTraceNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveCurrentTraceNo &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTraceNo
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[283]"></a>SaveCurrentTradeData</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, flash_oper.o(i.SaveCurrentTradeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveCurrentTradeData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[307]"></a>SaveDefaultTrade</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveDefaultTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveDefaultTrade &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[4]"></a>SaveEmvCapkItem</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, emvproc.o(i.SaveEmvCapkItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SaveEmvCapkItem &rArr; AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AscToBcd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> emvproc.o(i.DownLoadCAPK)
<LI> emvproc.o(i.OnlineLoadMk)
</UL>
<P><STRONG><a name="[2c3]"></a>SaveEmvData</STRONG> (Thumb, 152 bytes, Stack size 208 bytes, emvif.o(i.SaveEmvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = SaveEmvData &rArr; SetOnlineData &rArr; EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
</UL>

<P><STRONG><a name="[2b8]"></a>SaveEndPrintInfor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, flash_oper.o(i.SaveEndPrintInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveEndPrintInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
</UL>

<P><STRONG><a name="[30a]"></a>SaveFirstDownLoadFlag</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveFirstDownLoadFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveFirstDownLoadFlag &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
</UL>

<P><STRONG><a name="[30b]"></a>SaveFirstPlaycardsSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveFirstPlaycardsSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveFirstPlaycardsSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
</UL>

<P><STRONG><a name="[192]"></a>SaveICCardParam</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveICCardParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveICCardParam &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetParam
</UL>

<P><STRONG><a name="[30c]"></a>SaveICSaleSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveICSaleSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveICSaleSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
</UL>

<P><STRONG><a name="[123]"></a>SaveIDOperInfor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, flash_oper.o(i.SaveIDOperInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveIDOperInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
</UL>

<P><STRONG><a name="[30d]"></a>SaveInitEmvCapk</STRONG> (Thumb, 104 bytes, Stack size 304 bytes, emvaidcapk.o(i.SaveInitEmvCapk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = SaveInitEmvCapk &rArr; DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardCapkRecordAll
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddCapk
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSetMmi
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBOCDefaultPara
</UL>

<P><STRONG><a name="[30e]"></a>SaveInitEmvParam</STRONG> (Thumb, 146 bytes, Stack size 1232 bytes, emvaidcapk.o(i.SaveInitEmvParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 2000<LI>Call Chain = SaveInitEmvParam &rArr; DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTermAidList
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SaveICCardAidListRecord
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidRecordAll
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardAidListRecordAll
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AddApp
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSetMmi
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBOCDefaultPara
</UL>

<P><STRONG><a name="[1b1]"></a>SaveInsertAdd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveInsertAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveInsertAdd &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1af]"></a>SaveInsertMode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveInsertMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveInsertMode &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[30f]"></a>SaveJieShuanLogoffSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveJieShuanLogoffSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveJieShuanLogoffSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
</UL>

<P><STRONG><a name="[310]"></a>SaveJieShuanPrintDetailSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveJieShuanPrintDetailSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveJieShuanPrintDetailSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
</UL>

<P><STRONG><a name="[28e]"></a>SaveKeyTone</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveKeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveKeyTone &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[2b6]"></a>SaveLastPrintTraceNo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveLastPrintTraceNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveLastPrintTraceNo &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
</UL>

<P><STRONG><a name="[311]"></a>SaveLimitMoney</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveLimitMoney))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveLimitMoney &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[2bd]"></a>SaveLogFile</STRONG> (Thumb, 562 bytes, Stack size 1536 bytes, p8583_assist.o(i.SaveLogFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576<LI>Call Chain = SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveVoidRecord
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleRecord
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSALE_FailRecord
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompleteVoidRecord
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompleteRecord
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCancelRecord
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthRecord
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[2c1]"></a>SaveLogFile1</STRONG> (Thumb, 530 bytes, Stack size 1528 bytes, p8583_assist.o(i.SaveLogFile1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568<LI>Call Chain = SaveLogFile1 &rArr; SaveRefundRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRefundRecord
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[1b3]"></a>SaveNetAPN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveNetAPN))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveNetAPN &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
</UL>

<P><STRONG><a name="[279]"></a>SaveNetworkSelection</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveNetworkSelection))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveNetworkSelection &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
</UL>

<P><STRONG><a name="[13]"></a>SaveOneAid</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, emvproc.o(i.SaveOneAid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveOneAid &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvproc.o(i.QueryEmvParam)
</UL>
<P><STRONG><a name="[289]"></a>SaveOperLoginInfor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveOperLoginInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveOperLoginInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
</UL>

<P><STRONG><a name="[86]"></a>SavePBOCDefaultPara</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvaidcapk.o(i.SavePBOCDefaultPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 2008<LI>Call Chain = SavePBOCDefaultPara &rArr; SaveInitEmvParam &rArr; DspOperateInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvParam
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveInitEmvCapk
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_SavePBOCDefaultPara
</UL>

<P><STRONG><a name="[316]"></a>SavePOSLockInfor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SavePOSLockInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePOSLockInfor &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
</UL>

<P><STRONG><a name="[317]"></a>SavePOSLoginInfor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SavePOSLoginInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePOSLoginInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
</UL>

<P><STRONG><a name="[26e]"></a>SavePosId</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SavePosId))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePosId &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[2f4]"></a>SavePosVer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SavePosVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePosVer &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[318]"></a>SavePrintCardNumSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SavePrintCardNumSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePrintCardNumSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[319]"></a>SavePrintDegree</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SavePrintDegree))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePrintDegree &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[31a]"></a>SavePrintPageCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SavePrintPageCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePrintPageCnt &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[31b]"></a>SavePrintTitle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SavePrintTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SavePrintTitle &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[31c]"></a>SaveQrCodePrintPageCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveQrCodePrintPageCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveQrCodePrintPageCnt &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[31d]"></a>SaveReSendCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveReSendCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveReSendCnt &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[31e]"></a>SaveRecvTimeOutReverseSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveRecvTimeOutReverseSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveRecvTimeOutReverseSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[315]"></a>SaveRefundRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveRefundRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveRefundRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
</UL>

<P><STRONG><a name="[31f]"></a>SaveRefundSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveRefundSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveRefundSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[320]"></a>SaveRespond</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, p8583_proc.o(i.SaveRespond))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SaveRespond &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[321]"></a>SaveRespond56</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, p8583_proc.o(i.SaveRespond56))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SaveRespond56 &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[2fa]"></a>SaveReversalData</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, p8583_assist.o(i.SaveReversalData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1584<LI>Call Chain = SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReverseInfor
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[241]"></a>SaveReverseInfor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveReverseInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveReverseInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
</UL>

<P><STRONG><a name="[16]"></a>SaveRspICCData</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, emvif.o(i.SaveRspICCData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveRspICCData &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.cEmvLib_OnlineProc)
</UL>
<P><STRONG><a name="[312]"></a>SaveSALE_FailRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveSALE_FailRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveSALE_FailRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[2f0]"></a>SaveSafeVerCRC</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSafeVerCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSafeVerCRC &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[322]"></a>SaveSaleCancelPwordSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSaleCancelPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSaleCancelPwordSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
</UL>

<P><STRONG><a name="[313]"></a>SaveSaleRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveSaleRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveSaleRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[323]"></a>SaveSaleSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSaleSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSaleSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[324]"></a>SaveSaleVoidSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSaleVoidSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSaleVoidSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
</UL>

<P><STRONG><a name="[309]"></a>SaveScriptResult</STRONG> (Thumb, 150 bytes, Stack size 256 bytes, emvif.o(i.SaveScriptResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = SaveScriptResult &rArr; EmvLib_SetTLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScriptFile
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetScriptResult
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTLVString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvData
</UL>

<P><STRONG><a name="[2f1]"></a>SaveSelfSelectedFlgInfor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSelfSelectedFlgInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSelfSelectedFlgInfor &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[1b5]"></a>SaveServerIP</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveServerIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveServerIP &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1b9]"></a>SaveServerIP1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveServerIP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveServerIP1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1b7]"></a>SaveServerIPPort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveServerIPPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveServerIPPort &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[1bb]"></a>SaveServerIPPort1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveServerIPPort1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveServerIPPort1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
</UL>

<P><STRONG><a name="[326]"></a>SaveSignNameSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSignNameSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSignNameSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[271]"></a>SaveSubAppName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSubAppName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSubAppName &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[2ad]"></a>SaveSweepCodePayRecord</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, flash_oper.o(i.SaveSweepCodePayRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveSweepCodePayRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
</UL>

<P><STRONG><a name="[327]"></a>SaveSweepCodeTriggerWay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSweepCodeTriggerWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSweepCodeTriggerWay &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[328]"></a>SaveSweepCodeWay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveSweepCodeWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveSweepCodeWay &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
</UL>

<P><STRONG><a name="[1be]"></a>SaveTMSServerIP1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTMSServerIP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTMSServerIP1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[1c2]"></a>SaveTMSServerIP2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTMSServerIP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTMSServerIP2 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[1c0]"></a>SaveTMSServerIPPort1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTMSServerIPPort1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTMSServerIPPort1 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[1c4]"></a>SaveTMSServerIPPort2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTMSServerIPPort2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTMSServerIPPort2 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFiSetFuntion
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[329]"></a>SaveTPDUName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTPDUName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTPDUName &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPDU2SetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[32a]"></a>SaveTmsAppVer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsAppVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsAppVer &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[2f3]"></a>SaveTmsAppname</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsAppname))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsAppname &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[32b]"></a>SaveTmsDisInfor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsDisInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsDisInfor &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[32c]"></a>SaveTmsDownFlg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsDownFlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsDownFlg &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[32d]"></a>SaveTmsEndTimer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsEndTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsEndTimer &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[2f2]"></a>SaveTmsFname</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsFname))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsFname &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
</UL>

<P><STRONG><a name="[32e]"></a>SaveTmsStartTimer</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTmsStartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTmsStartTimer &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[250]"></a>SaveTrackEncryptSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveTrackEncryptSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveTrackEncryptSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
</UL>

<P><STRONG><a name="[26f]"></a>SaveUnitName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveUnitName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveUnitName &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[270]"></a>SaveUnitNameEnglish</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveUnitNameEnglish))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveUnitNameEnglish &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[26d]"></a>SaveUnitNum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveUnitNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveUnitNum &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
</UL>

<P><STRONG><a name="[32f]"></a>SaveUpDataFlag</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SaveUpDataFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveUpDataFlag &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[314]"></a>SaveVoidRecord</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash_oper.o(i.SaveVoidRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashMess_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
</UL>

<P><STRONG><a name="[330]"></a>SaveWaitTime</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SaveWaitTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveWaitTime &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
</UL>

<P><STRONG><a name="[331]"></a>SaveZMangPwordSwitch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flash_oper.o(i.SaveZMangPwordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SaveZMangPwordSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[332]"></a>Save_termial_para</STRONG> (Thumb, 222 bytes, Stack size 120 bytes, p8583_proc.o(i.Save_termial_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Save_termial_para &rArr; UTF8ToGBK &rArr; UnicodeToGBK
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8ToGBK
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitName
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
</UL>

<P><STRONG><a name="[334]"></a>SeeKOriginalAuthVoidTrade</STRONG> (Thumb, 138 bytes, Stack size 1536 bytes, p8583_assist.o(i.SeeKOriginalAuthVoidTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = SeeKOriginalAuthVoidTrade &rArr; GetCompleteIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
</UL>

<P><STRONG><a name="[335]"></a>SeeKOriginalSaleTrade</STRONG> (Thumb, 180 bytes, Stack size 1536 bytes, p8583_assist.o(i.SeeKOriginalSaleTrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = SeeKOriginalSaleTrade &rArr; GetSaleIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
</UL>

<P><STRONG><a name="[2dd]"></a>SeeKOriginalTradeInfor</STRONG> (Thumb, 1390 bytes, Stack size 1576 bytes, p8583_assist.o(i.SeeKOriginalTradeInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1600<LI>Call Chain = SeeKOriginalTradeInfor &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidIndex
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteVoidCount
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelIndex
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelData
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCancelCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthIndex
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
</UL>

<P><STRONG><a name="[2de]"></a>SeeSweepCodePayInfor</STRONG> (Thumb, 304 bytes, Stack size 312 bytes, p8583_assist.o(i.SeeSweepCodePayInfor))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SeeSweepCodePayInfor &rArr; GetSweepcodeUndoIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoIndex
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoData
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodeUndoCount
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
</UL>

<P><STRONG><a name="[175]"></a>SelectApp</STRONG> (Thumb, 1184 bytes, Stack size 6248 bytes, appselect.o(i.SelectApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 9232<LI>Call Chain = SelectApp &rArr; SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scc_select_slot
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTLVSeparate
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTermId
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSFI
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartSelect
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ClearALLTLVData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSelForLog
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
</UL>

<P><STRONG><a name="[338]"></a>SelectListAID</STRONG> (Thumb, 584 bytes, Stack size 1392 bytes, appselect.o(i.SelectListAID))
<BR><BR>[Stack]<UL><LI>Max Depth = 2984<LI>Call Chain = SelectListAID &rArr; EmvSelect &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetApp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearADFEntry
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSeparateBER_TLV
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[339]"></a>SelfSelected_Merchants_Inquiries</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, p8583_proc.o(i.SelfSelected_Merchants_Inquiries))
<BR><BR>[Stack]<UL><LI>Max Depth = 20392<LI>Call Chain = SelfSelected_Merchants_Inquiries &rArr; TRANS_Sale &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f8]"></a>SendBufToTerm</STRONG> (Thumb, 2268 bytes, Stack size 640 bytes, p8583_proc.o(i.SendBufToTerm))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = SendBufToTerm &rArr; CalMAC &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitNum
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUnitName
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePosId
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentBatchNum
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond56
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRespond
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogonInitKey
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolveHostPacket
</UL>

<P><STRONG><a name="[33a]"></a>SendGSMData2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tms.o(i.SendGSMData2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendGSMData2 &rArr; Lib_WNetTcpSend
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpSend
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[b0]"></a>SendRecvPacket</STRONG> (Thumb, 1704 bytes, Stack size 1664 bytes, p8583_proc.o(i.SendRecvPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 3952<LI>Call Chain = SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WiFiModeInterface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpSend
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpRecv
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpConnect
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_CheckNetwordMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort1
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP1
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetworkSelection
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetAPN
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTraceNo
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResolveHostPacket
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathcRefundProc
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
</UL>

<P><STRONG><a name="[5e]"></a>SeparateBER_TLV</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, emvpublic.o(i.SeparateBER_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTLVSeparate
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartSelect
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDataLen
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalysePSEDir
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleSeparate
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBER_TLVByTag
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGenAC
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DolGetByTag
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSeparate
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateScript
</UL>

<P><STRONG><a name="[33c]"></a>Set8583Packet</STRONG> (Thumb, 1460 bytes, Stack size 56 bytes, p8583_proc.o(i.Set8583Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = Set8583Packet &rArr; Pre8583Packet &rArr; GetTxnTableIndex &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDDes
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_IntToBcd
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pre8583Packet
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField63
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField62
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField61
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField60
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField59
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField56
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField55
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField48
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField46
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init8583Packet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[341]"></a>Set8583PrimaryField</STRONG> (Thumb, 252 bytes, Stack size 56 bytes, p8583_proc.o(i.Set8583PrimaryField))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Set8583PrimaryField &rArr; Api_IntToBcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_IntToBcd
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
</UL>

<P><STRONG><a name="[343]"></a>SetCDCVMSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SetCDCVMSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetCDCVMSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[344]"></a>SetDormancy_BacklightTime</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, p8583_proc.o(i.SetDormancy_BacklightTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetDormancy_BacklightTime &rArr; Lib_SleepCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SleepCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
</UL>

<P><STRONG><a name="[238]"></a>SetEmvTranType</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, emvinsertcard.o(i.SetEmvTranType))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetEmvTranType &rArr; EmvLib_SetTLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
</UL>

<P><STRONG><a name="[346]"></a>SetFreePswAmount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.SetFreePswAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetFreePswAmount &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[347]"></a>SetFreePswSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SetFreePswSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetFreePswSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[348]"></a>SetFreeSigntAmount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_oper.o(i.SetFreeSigntAmount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetFreeSigntAmount &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[349]"></a>SetFreeSigntSwitch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flash_oper.o(i.SetFreeSigntSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetFreeSigntSwitch &rArr; Lib_FlashSet_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
</UL>

<P><STRONG><a name="[1f0]"></a>SetIssuerName</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, emvport.o(i.SetIssuerName))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetIssuerName &rArr; EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
</UL>

<P><STRONG><a name="[34a]"></a>SetKeyInDex</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, loginfun.o(i.SetKeyInDex))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = SetKeyInDex &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDReadMkeyID
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDWriteMKeyID
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
</UL>

<P><STRONG><a name="[308]"></a>SetOnlineData</STRONG> (Thumb, 130 bytes, Stack size 344 bytes, emvif.o(i.SetOnlineData))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = SetOnlineData &rArr; EmvLib_GetTLV &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTLVString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveEmvData
</UL>

<P><STRONG><a name="[34c]"></a>SetSettleData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.SetSettleData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSettleData &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
</UL>

<P><STRONG><a name="[28d]"></a>SetTimeFun</STRONG> (Thumb, 170 bytes, Stack size 104 bytes, loginfun.o(i.SetTimeFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = SetTimeFun &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetTime
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_CheckYear
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_CheckTime
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_CheckDate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_asctobcd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
</UL>

<P><STRONG><a name="[193]"></a>SimpleSeparate</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, emviccomm.o(i.SimpleSeparate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SimpleSeparate &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
</UL>

<P><STRONG><a name="[2dc]"></a>SweepCode_Query</STRONG> (Thumb, 524 bytes, Stack size 1584 bytes, p8583_trade.o(i.SweepCode_Query))
<BR><BR>[Stack]<UL><LI>Max Depth = 9092<LI>Call Chain = SweepCode_Query &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
</UL>

<P><STRONG><a name="[276]"></a>SweepCode_phoneTopos</STRONG> (Thumb, 1678 bytes, Stack size 1568 bytes, p8583_trade.o(i.SweepCode_phoneTopos))
<BR><BR>[Stack]<UL><LI>Max Depth = 9076<LI>Call Chain = SweepCode_phoneTopos &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DspQRcode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspRedAmount
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
</UL>

<P><STRONG><a name="[275]"></a>SweepCode_posTophone</STRONG> (Thumb, 1474 bytes, Stack size 1304 bytes, p8583_trade.o(i.SweepCode_posTophone))
<BR><BR>[Stack]<UL><LI>Max Depth = 8812<LI>Call Chain = SweepCode_posTophone &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataLog3
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSON_packet
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
</UL>

<P><STRONG><a name="[355]"></a>SweepParameterSet</STRONG> (Thumb, 292 bytes, Stack size 208 bytes, menu.o(i.SweepParameterSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = SweepParameterSet &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetQrCodePrintPageCnt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeTriggerWay
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodeWay
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSweepCodeTriggerWay
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveQrCodePrintPageCnt
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeWay
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
</UL>

<P><STRONG><a name="[1bd]"></a>SysDebugLog2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, p8583_proc.o(i.SysDebugLog2))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_terminal_parameter_information_processing
</UL>

<P><STRONG><a name="[356]"></a>SysParSet</STRONG> (Thumb, 964 bytes, Stack size 408 bytes, loginfun.o(i.SysParSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = SysParSet &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintTitle
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintPageCnt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintCardNumSwitch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentBatchNum
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintDegree
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnGraySet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintDegree
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTraceNo
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitTime
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReSendCnt
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentBatchNum
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecvTimeOutReverseSwitch
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWaitTime
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecvTimeOutReverseSwitch
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReSendCnt
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintTitle
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintPageCnt
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintCardNumSwitch
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>

<P><STRONG><a name="[29d]"></a>SysVerifyPasswrod</STRONG> (Thumb, 260 bytes, Stack size 120 bytes, loginfun.o(i.SysVerifyPasswrod))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = SysVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIDOperInfor
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMangeMenu
</UL>

<P><STRONG><a name="[287]"></a>Systerm00Menu</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, menu.o(i.Systerm00Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = Systerm00Menu &rArr; SweepParameterSet &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetworkSelectionFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
</UL>

<P><STRONG><a name="[288]"></a>Systerm88Menu</STRONG> (Thumb, 352 bytes, Stack size 104 bytes, menu.o(i.Systerm88Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 18368<LI>Call Chain = Systerm88Menu &rArr; DownloadMenu &rArr; TMS_Management_Menu &rArr;  TRANS_Batch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_NetwordSelection
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
</UL>

<P><STRONG><a name="[358]"></a>Systerm88OtherMenu</STRONG> (Thumb, 512 bytes, Stack size 40 bytes, menu.o(i.Systerm88OtherMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872<LI>Call Chain = Systerm88OtherMenu &rArr; ClearTradeLog &rArr; ResetflashSection171 &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICSaleSwitch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveFirstPlaycardsSwitch
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveICSaleSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
</UL>

<P><STRONG><a name="[359]"></a>SystermManageMenu</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, menu.o(i.SystermManageMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8884<LI>Call Chain = SystermManageMenu &rArr; TermKeyManageMenu &rArr; OnlineLoadMk &rArr; FinishDownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RemoteUpdate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMangeMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermParFuntion
</UL>

<P><STRONG><a name="[286]"></a>SystermParFuntion</STRONG> (Thumb, 72 bytes, Stack size 80 bytes, loginfun.o(i.SystermParFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8964<LI>Call Chain = SystermParFuntion &rArr; SystermManageMenu &rArr; TermKeyManageMenu &rArr; OnlineLoadMk &rArr; FinishDownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
</UL>

<P><STRONG><a name="[141]"></a>SystermPassWordCheck</STRONG> (Thumb, 68 bytes, Stack size 80 bytes, loginfun.o(i.SystermPassWordCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = SystermPassWordCheck &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[143]"></a>TMS_Management_Menu</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, menu.o(i.TMS_Management_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 18232 + In Cycle
<LI>Call Chain = TMS_Management_Menu &rArr;  TRANS_Batch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsDownFlg
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
</UL>

<P><STRONG><a name="[265]"></a>TMS_Update</STRONG> (Thumb, 4198 bytes, Stack size 13112 bytes, tms.o(i.TMS_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 18168<LI>Call Chain = TMS_Update &rArr; Code_DigitVerify_Calculate &rArr; sha4_finish &rArr; sha4_update &rArr; sha4_process
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspOperateInfo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadAppVerInfor
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpConnect
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetAPN
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort2
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort1
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP2
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP1
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_byte
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Read_pFlash
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDGetRand
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Write_pFlash
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WriteRemoteInfor
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WriteRemoteFlag
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WriteAPP
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Erase_pFlash_Sector
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_response
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGSMData2
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvPacket_POSP
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LRC
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_Crc_Calculate
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayToU32
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBkpRam
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUpDataFlag
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBkpRam
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[35c]"></a>TMS_down_requt</STRONG> (Thumb, 316 bytes, Stack size 440 bytes, tms.o(i.TMS_down_requt))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = TMS_down_requt &rArr; GetUnitNum &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_BcdToAsc
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LRC
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsAppVer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[35d]"></a>TMS_down_response</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tms.o(i.TMS_down_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = TMS_down_response &rArr; Display_RetCode &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[29a]"></a>TMS_terminal_parameter_information_processing</STRONG> (Thumb, 1584 bytes, Stack size 368 bytes, tms.o(i.TMS_terminal_parameter_information_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TMS_terminal_parameter_information_processing &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_printf
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTPDUName
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort2
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort1
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP2
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP1
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsStartTimer
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsEndTimer
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsDownFlg
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsDisInfor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTmsAppVer
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
</UL>

<P><STRONG><a name="[104]"></a>TPDU2SetFuntion</STRONG> (Thumb, 68 bytes, Stack size 216 bytes, loginfun.o(i.TPDU2SetFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = TPDU2SetFuntion &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTPDUName
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTPDUName
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[2a8]"></a>TRANS_AuTH</STRONG> (Thumb, 432 bytes, Stack size 40 bytes, p8583_trade.o(i.TRANS_AuTH))
<BR><BR>[Stack]<UL><LI>Max Depth = 20344<LI>Call Chain = TRANS_AuTH &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuTHSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
</UL>

<P><STRONG><a name="[2ab]"></a>TRANS_AuthCancel</STRONG> (Thumb, 566 bytes, Stack size 1536 bytes, p8583_trade.o(i.TRANS_AuthCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 21840<LI>Call Chain = TRANS_AuthCancel &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelSwitch
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelPwordSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
</UL>

<P><STRONG><a name="[2a9]"></a>TRANS_AuthComplete</STRONG> (Thumb, 444 bytes, Stack size 1520 bytes, p8583_trade.o(i.TRANS_AuthComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 21824<LI>Call Chain = TRANS_AuthComplete &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAuthorizeCode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
</UL>

<P><STRONG><a name="[2aa]"></a>TRANS_AuthCompleteVoid</STRONG> (Thumb, 774 bytes, Stack size 1544 bytes, p8583_trade.o(i.TRANS_AuthCompleteVoid))
<BR><BR>[Stack]<UL><LI>Max Depth = 21848<LI>Call Chain = TRANS_AuthCompleteVoid &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalAuthVoidTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputCardValid
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidSwitch
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidPwordSwitch
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteBrushSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
</UL>

<P><STRONG><a name="[264]"></a>TRANS_Batch</STRONG> (Thumb, 526 bytes, Stack size 1744 bytes, p8583_trade.o(i.TRANS_Batch))
<BR><BR>[Stack]<UL><LI>Max Depth = 20232<LI>Call Chain = TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotleList
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSettleData
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanPrintDetailSwitch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTradeLog
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[2a4]"></a>TRANS_DownLoad</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, p8583_trade.o(i.TRANS_DownLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 7540<LI>Call Chain = TRANS_DownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pospara_download
</UL>

<P><STRONG><a name="[2a3]"></a>TRANS_DownLoad2</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, p8583_trade.o(i.TRANS_DownLoad2))
<BR><BR>[Stack]<UL><LI>Max Depth = 7532<LI>Call Chain = TRANS_DownLoad2 &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pospara_download
</UL>

<P><STRONG><a name="[262]"></a>TRANS_Logoff</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, p8583_trade.o(i.TRANS_Logoff))
<BR><BR>[Stack]<UL><LI>Max Depth = 18488<LI>Call Chain = TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLoginInfor
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanLogoffSwitch
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBatch
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[59]"></a>TRANS_Logon</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, p8583_trade.o(i.TRANS_Logon))
<BR><BR>[Stack]<UL><LI>Max Depth = 20288<LI>Call Chain = TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearline
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLoginInfor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveFirstDownLoadFlag
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmsDownFlg
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstDownLoadFlag
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckEmvParameter
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysDebugLog2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegisterMenu
</UL>

<P><STRONG><a name="[36c]"></a>TRANS_Logon1</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, p8583_trade.o(i.TRANS_Logon1))
<BR><BR>[Stack]<UL><LI>Max Depth = 7572<LI>Call Chain = TRANS_Logon1 &rArr; TRANS_DownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLoginInfor
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
</UL>

<P><STRONG><a name="[292]"></a>TRANS_Query</STRONG> (Thumb, 406 bytes, Stack size 136 bytes, p8583_trade.o(i.TRANS_Query))
<BR><BR>[Stack]<UL><LI>Max Depth = 20440<LI>Call Chain = TRANS_Query &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBalanceSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[36d]"></a>TRANS_Refund</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, p8583_trade.o(i.TRANS_Refund))
<BR><BR>[Stack]<UL><LI>Max Depth = 20352<LI>Call Chain = TRANS_Refund &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldTradeDate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldReference
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundSwitch
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLimitMoney
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTradeAmountFun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
</UL>

<P><STRONG><a name="[295]"></a>TRANS_RefundMenue</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, menu.o(i.TRANS_RefundMenue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20408<LI>Call Chain = TRANS_RefundMenue &rArr; TRANS_Refund &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menumodle
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[273]"></a>TRANS_Sale</STRONG> (Thumb, 670 bytes, Stack size 48 bytes, p8583_trade.o(i.TRANS_Sale))
<BR><BR>[Stack]<UL><LI>Max Depth = 20352<LI>Call Chain = TRANS_Sale &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleD0Switch
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[247]"></a>TRANS_Sign</STRONG> (Thumb, 876 bytes, Stack size 4920 bytes, p8583_trade.o(i.TRANS_Sign))
<BR><BR>[Stack]<UL><LI>Max Depth = 12428<LI>Call Chain = TRANS_Sign &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetHW_VER
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignNameSwitch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TradeFeatureCode
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PictureCompress
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_EleSignature
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckFreeSign
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
</UL>

<P><STRONG><a name="[369]"></a>TRANS_UpBatch</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, p8583_trade.o(i.TRANS_UpBatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 7548<LI>Call Chain = TRANS_UpBatch &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
</UL>

<P><STRONG><a name="[36b]"></a>TRANS_UpBatchEnd</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, p8583_trade.o(i.TRANS_UpBatchEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 7540<LI>Call Chain = TRANS_UpBatchEnd &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpNum
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
</UL>

<P><STRONG><a name="[36a]"></a>TRANS_UpRefundBatch</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, p8583_trade.o(i.TRANS_UpRefundBatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4000<LI>Call Chain = TRANS_UpRefundBatch &rArr; BathcRefundProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerfyBatchUpList1
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList1
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathcRefundProc
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
</UL>

<P><STRONG><a name="[294]"></a>TRANS_Void</STRONG> (Thumb, 942 bytes, Stack size 1576 bytes, p8583_trade.o(i.TRANS_Void))
<BR><BR>[Stack]<UL><LI>Max Depth = 21880<LI>Call Chain = TRANS_Void &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDCount
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_time
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalSaleTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhuGuanVerifyPasswrod
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleVoidSwitch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleVoidBrushSwitch
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCancelPwordSwitch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodePasswordFun
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeTitleDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjMACLogin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[263]"></a>TellerMenu</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, menu.o(i.TellerMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = TellerMenu &rArr; QueryOperFuntion &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[35b]"></a>TermKeyManageMenu</STRONG> (Thumb, 180 bytes, Stack size 104 bytes, menu.o(i.TermKeyManageMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8844<LI>Call Chain = TermKeyManageMenu &rArr; OnlineLoadMk &rArr; FinishDownLoad &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyInDex
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DesSetFuntion
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_UpdataTerm_MK_USB
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_UpdataTerm_MK_COM
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pospara_download
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>

<P><STRONG><a name="[268]"></a>TermLockFuntion</STRONG> (Thumb, 334 bytes, Stack size 80 bytes, loginfun.o(i.TermLockFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = TermLockFuntion &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePOSLockInfor
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bcd_to_Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[266]"></a>TermRemindInfo</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, menu.o(i.TermRemindInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = TermRemindInfo &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>

<P><STRONG><a name="[336]"></a>TestTermId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, appselect.o(i.TestTermId))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[35a]"></a>TradeContrl</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, menu.o(i.TradeContrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = TradeContrl &rArr; TradeOtherSwitch &rArr; GetInputAmount &rArr; LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradePasswordSwitch
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeJieShuanSwitch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
</UL>

<P><STRONG><a name="[379]"></a>TradeJieShuanSwitch</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, loginfun.o(i.TradeJieShuanSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = TradeJieShuanSwitch &rArr; CtlParFuntion &rArr; DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanPrintDetailSwitch
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJieShuanLogoffSwitch
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJieShuanPrintDetailSwitch
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveJieShuanLogoffSwitch
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
</UL>

<P><STRONG><a name="[37a]"></a>TradeOtherSwitch</STRONG> (Thumb, 552 bytes, Stack size 104 bytes, loginfun.o(i.TradeOtherSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = TradeOtherSwitch &rArr; GetInputAmount &rArr; LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreeSignAmount
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswAmount
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCFreeSigntSwitch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDefaultTrade
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreeSigntSwitch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreeSigntAmount
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreePswSwitch
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFreePswAmount
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCDCVMSwitch
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZMangPwordSwitch
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLimitMoney
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFreePswSwitch
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCDCVMSwitch
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveZMangPwordSwitch
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLimitMoney
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveFirstPlaycardsSwitch
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDefaultTrade
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstPlaycardsSwitch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
</UL>

<P><STRONG><a name="[378]"></a>TradePasswordSwitch</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, loginfun.o(i.TradePasswordSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = TradePasswordSwitch &rArr; CtlParFuntion &rArr; DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCancelPwordSwitch
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidPwordSwitch
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelPwordSwitch
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleCancelPwordSwitch
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteVoidPwordSwitch
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCancelPwordSwitch
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
</UL>

<P><STRONG><a name="[293]"></a>TradeQuery</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, menu.o(i.TradeQuery))
<BR><BR>[Stack]<UL><LI>Max Depth = 9452<LI>Call Chain = TradeQuery &rArr; QueryTrans_Sale &rArr; SweepCode_Query &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
</UL>

<P><STRONG><a name="[377]"></a>TradeSwitch</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, menu.o(i.TradeSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = TradeSwitch &rArr; sel_mem &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
</UL>

<P><STRONG><a name="[37b]"></a>TradeVoucherQuery</STRONG> (Thumb, 254 bytes, Stack size 1800 bytes, p8583_assist.o(i.TradeVoucherQuery))
<BR><BR>[Stack]<UL><LI>Max Depth = 3400<LI>Call Chain = TradeVoucherQuery &rArr; SeeKOriginalTradeInfor &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputOldVoucher
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeSweepCodePayInfor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeeKOriginalTradeInfor
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
</UL>

<P><STRONG><a name="[37c]"></a>TraditionTradeSwtich</STRONG> (Thumb, 470 bytes, Stack size 16 bytes, loginfun.o(i.TraditionTradeSwtich))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = TraditionTradeSwtich &rArr; CtlParFuntion &rArr; DspSetMmi &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleSwitch
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleVoidSwitch
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundSwitch
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBalanceSwitch
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteVoidSwitch
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCompleteSwitch
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCancelSwitch
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuTHSwitch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleVoidSwitch
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSaleSwitch
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRefundSwitch
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBalanceSwitch
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteVoidSwitch
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCompleteSwitch
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuthCancelSwitch
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAuTHSwitch
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeSwitch
</UL>

<P><STRONG><a name="[333]"></a>UTF8ToGBK</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, u8_unicode.o(i.UTF8ToGBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UTF8ToGBK &rArr; UnicodeToGBK
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToGBK
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
</UL>

<P><STRONG><a name="[37d]"></a>UnicodeToGBK</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, u8_unicode.o(i.UnicodeToGBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UnicodeToGBK
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8ToGBK
</UL>

<P><STRONG><a name="[139]"></a>UnpackTlvData</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, emvproc.o(i.UnpackTlvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UnpackTlvData &rArr; GetTLVItem &rArr;  GetTLVItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineLoadMk
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
</UL>

<P><STRONG><a name="[35f]"></a>UpdataCourse</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, tms.o(i.UpdataCourse))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = UpdataCourse &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrArea
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrDrawLine
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[2be]"></a>UpdataLog</STRONG> (Thumb, 234 bytes, Stack size 1536 bytes, p8583_assist.o(i.UpdataLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560<LI>Call Chain = UpdataLog &rArr; GetSaleIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailIndex
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailData
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleFailCount
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[2bf]"></a>UpdataLog1</STRONG> (Thumb, 114 bytes, Stack size 1528 bytes, p8583_assist.o(i.UpdataLog1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = UpdataLog1 &rArr; GetAuthIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthIndex
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAuthCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[2c0]"></a>UpdataLog2</STRONG> (Thumb, 114 bytes, Stack size 1528 bytes, p8583_assist.o(i.UpdataLog2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = UpdataLog2 &rArr; GetCompleteIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteIndex
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompleteCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[2b5]"></a>UpdataLog3</STRONG> (Thumb, 214 bytes, Stack size 288 bytes, p8583_assist.o(i.UpdataLog3))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = UpdataLog3 &rArr; GetSweepcodePayIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepcodePayCount
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
</UL>

<P><STRONG><a name="[299]"></a>Updata_time</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, p8583_assist.o(i.Updata_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Updata_time &rArr; ObtTimeData &rArr; Api_AscToBcd
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetTime
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObtTimeData
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_CheckTime
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_CheckDate
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_Request
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthComplete
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
</UL>

<P><STRONG><a name="[137]"></a>UpdateCoreCapkInfo</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, emvproc.o(i.UpdateCoreCapkInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateCoreCapkInfo &rArr; Lib_DelICCardCapkRecordAll
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelICCardCapkRecordAll
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
</UL>

<P><STRONG><a name="[33f]"></a>UpdateEmvDupFile</STRONG> (Thumb, 158 bytes, Stack size 704 bytes, emvproc.o(i.UpdateEmvDupFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 2288<LI>Call Chain = UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveReversalData
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
</UL>

<P><STRONG><a name="[1]"></a>V32P_StartUp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dll.o(i.V32P_StartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = V32P_StartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mps_cm0.o(STARTUP)
</UL>
<P><STRONG><a name="[371]"></a>VerfyBatchUpList</STRONG> (Thumb, 166 bytes, Stack size 1520 bytes, p8583_assist.o(i.VerfyBatchUpList))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544<LI>Call Chain = VerfyBatchUpList &rArr; GetVOIDIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVOIDData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleIndex
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
</UL>

<P><STRONG><a name="[372]"></a>VerfyBatchUpList1</STRONG> (Thumb, 76 bytes, Stack size 1520 bytes, p8583_assist.o(i.VerfyBatchUpList1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544<LI>Call Chain = VerfyBatchUpList1 &rArr; GetRefundIndex &rArr; Lib_FlashGet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundIndex
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRefundData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
</UL>

<P><STRONG><a name="[2c2]"></a>VlpBalFromIssuerAppData</STRONG> (Thumb, 118 bytes, Stack size 312 bytes, emvinsertcard.o(i.VlpBalFromIssuerAppData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = VlpBalFromIssuerAppData &rArr; lcdshow &rArr; lcd_disp &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcEmvTran
</UL>

<P><STRONG><a name="[2bc]"></a>WT_Signer</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, p8583_assist.o(i.WT_Signer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WT_Signer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
</UL>

<P><STRONG><a name="[242]"></a>WaitUserAck</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appapi.o(i.WaitUserAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitUserAck &rArr; Lib_Kbhit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
</UL>

<P><STRONG><a name="[4d]"></a>WaitUserAck1</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, appapi.o(i.WaitUserAck1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitUserAck1 &rArr; Lib_TimerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_Check_Print_Staut
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeVoucherQuery
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReversalData
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintLastTrade
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradePool
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTradeList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTradeExist
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanCode
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermRemindInfo
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperRegisterFuntion
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinishDownLoad
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadEmvParam
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownLoadCAPK
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTrackPANFun
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpRefundBatch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatchEnd
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_UpBatch
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logon
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Logoff
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad2
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_DownLoad
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Batch
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPosLogin
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseFuntion
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTrans_Sale
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlineTransProc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ElectricQuantityDetection
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalMAC
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispRetCode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrInfoFun
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysVerifyPasswrod
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperVerifyPasswrod
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageVerifyPasswrod
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandSetKeyFuntion
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectorVerifyPasswrod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelOperFuntion
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddOperFuntion
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88OtherMenu
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSetRun1
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParmDownload_RequestEnd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RetCode
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteErrorWarn
</UL>

<P><STRONG><a name="[2d7]"></a>WaitUserAck4</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, appapi.o(i.WaitUserAck4))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitUserAck4 &rArr; Lib_TimerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryOperFuntion
</UL>

<P><STRONG><a name="[90]"></a>WaitUserAckAndRet</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, emvport.o(i.WaitUserAckAndRet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WaitUserAckAndRet &rArr; Lib_TimerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
</UL>

<P><STRONG><a name="[109]"></a>WiFiSetFuntion</STRONG> (Thumb, 330 bytes, Stack size 232 bytes, loginfun.o(i.WiFiSetFuntion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = WiFiSetFuntion &rArr; Api_KbInputFuntionHz &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIPPort1
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerIP1
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIPPort2
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTMSServerIP2
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIPPort1
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveServerIP1
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIPPort2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTMSServerIP2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[363]"></a>WriteBkpRam</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_oper.o(i.WriteBkpRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteBkpRam &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[325]"></a>WriteScriptFile</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.WriteScriptFile))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScriptResult
</UL>

<P><STRONG><a name="[368]"></a>ZhuGuanVerifyPasswrod</STRONG> (Thumb, 86 bytes, Stack size 80 bytes, tradeassistfun.o(i.ZhuGuanVerifyPasswrod))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = ZhuGuanVerifyPasswrod &rArr; Api_KbInputFuntion &rArr; EnterSequenceNumber &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InquiryIDOperInfor
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Void
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Refund
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCompleteVoid
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuthCancel
</UL>

<P><STRONG><a name="[156]"></a>_ChangeDateYear</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, emvpublic.o(i._ChangeDateYear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckDate
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[2cc]"></a>_CheckAllSFI</STRONG> (Thumb, 228 bytes, Stack size 304 bytes, qpboc.o(i._CheckAllSFI))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = _CheckAllSFI &rArr; CheckSFI
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSFI
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
</UL>

<P><STRONG><a name="[bc]"></a>_InputAmt</STRONG> (Thumb, 246 bytes, Stack size 136 bytes, cllbckfunc.o(i._InputAmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _InputAmt &rArr; ConvBcdToBin &rArr; dat_bcdtobin
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_asctobcd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdToBin
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAmtExt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
</UL>

<P><STRONG><a name="[29e]"></a>_OfflinePINProcessing</STRONG> (Thumb, 1302 bytes, Stack size 1536 bytes, offlinedataauth.o(i._OfflinePINProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 6844<LI>Call Chain = _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderOfflinePwd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_GetRandNumberByNum
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetChallenge
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>

<P><STRONG><a name="[167]"></a>_OnlineProcessing</STRONG> (Thumb, 1616 bytes, Stack size 1800 bytes, terminalandcardaction.o(i._OnlineProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 6484<LI>Call Chain = _OnlineProcessing &rArr; _ProcIssuerDef &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_ReferProc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_OnlineProc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileClose
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove_EMV
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcReasonAdvice
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IssuertoCardScriptProcessing
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateScript
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_OnlineProcessing
</UL>

<P><STRONG><a name="[381]"></a>_ProcIssuerDef</STRONG> (Thumb, 648 bytes, Stack size 840 bytes, terminalandcardaction.o(i._ProcIssuerDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 4684<LI>Call Chain = _ProcIssuerDef &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcReasonAdvice
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;somememcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[16a]"></a>_TerminalAndCardActionAnalysis</STRONG> (Thumb, 1246 bytes, Stack size 664 bytes, terminalandcardaction.o(i._TerminalAndCardActionAnalysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 5124<LI>Call Chain = _TerminalAndCardActionAnalysis &rArr; TerminalAction &rArr; ForcedOnline &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_IoCtrl
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombineDSV
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcReasonAdvice
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing_EC
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CardActionAnalysis
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalAndCardActionAnalysis
</UL>

<P><STRONG><a name="[384]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3be]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[44]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_SweepCodeTicket
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTradeList
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisTradeInfor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSweepCodeTradeInfor
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertCardProc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sign
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Query
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEmvDupFile
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583PrimaryField
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField61
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField60
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField48
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MackField21
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisSaleList
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPassWordFun_offline
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIssuerName
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSelForLog
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmvTrackData
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_WaitAppSel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvParam
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryEmvCapk
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCandidateList
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdataCourse
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactlessAddCandidateList
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
</UL>

<P><STRONG><a name="[3bf]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[3c0]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[386]"></a>__0vsnprintf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3c1]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[3c2]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[1ac]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __c89vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[3c3]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[387]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3c4]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[3c5]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[24c]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnStr
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintf
</UL>

<P><STRONG><a name="[3c6]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[36]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[7e]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, p8583_assist.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatchUpList
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntionHz
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_KbInputFuntion
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set8583Packet
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBufToTerm
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_termial_para
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm88Menu
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systerm00Menu
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraditionTradeSwtich
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeOtherSwitch
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysParSet
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MerchantsParaSet
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSSetFuntion
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtlParFuntion
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMI_ReadCard_Dsp
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTransName
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_mem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAppParamItem
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
</UL>

<P><STRONG><a name="[2c5]"></a>__QPboc_CardAuth</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, qpboc.o(i.__QPboc_CardAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 6260<LI>Call Chain = __QPboc_CardAuth &rArr; OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_CardAuth
</UL>

<P><STRONG><a name="[21]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[3c7]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[3c8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3c9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3ca]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2d0]"></a>_cl_AllSeparateBER_TLV</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, entry.o(i._cl_AllSeparateBER_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _cl_AllSeparateBER_TLV &rArr; _cl_NoConstructAllSeparateBER_TLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
</UL>

<P><STRONG><a name="[27e]"></a>_cl_EMVSignVeri</STRONG> (Thumb, 1276 bytes, Stack size 1880 bytes, qpboc.o(i._cl_EMVSignVeri))
<BR><BR>[Stack]<UL><LI>Max Depth = 1988<LI>Call Chain = _cl_EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Hash
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromTimeToY4MMDD
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_RSAPublicKeyDecrypt
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHead
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
</UL>

<P><STRONG><a name="[2c9]"></a>_cl_EmvGetProcessingOptions</STRONG> (Thumb, 646 bytes, Stack size 936 bytes, qpbociccomm.o(i._cl_EmvGetProcessingOptions))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160<LI>Call Chain = _cl_EmvGetProcessingOptions &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispartGetProcOp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_AllSeparateBER_TLV
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
</UL>

<P><STRONG><a name="[2cf]"></a>_cl_EmvReadRecord</STRONG> (Thumb, 440 bytes, Stack size 944 bytes, qpbociccomm.o(i._cl_EmvReadRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168<LI>Call Chain = _cl_EmvReadRecord &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleSeparate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
</UL>

<P><STRONG><a name="[19a]"></a>_cl_EmvSelect</STRONG> (Thumb, 506 bytes, Stack size 936 bytes, entry.o(i._cl_EmvSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160<LI>Call Chain = _cl_EmvSelect &rArr; Picc_command_APDU_sim &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_AllSeparateBER_TLV
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Picc_command_APDU_sim
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
</UL>

<P><STRONG><a name="[388]"></a>_cl_NoConstructAllSeparateBER_TLV</STRONG> (Thumb, 848 bytes, Stack size 64 bytes, entry.o(i._cl_NoConstructAllSeparateBER_TLV))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _cl_NoConstructAllSeparateBER_TLV &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datebcdtobin
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearZeroAndFF
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTagLen
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindRedundantdataofUndefined
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindRedundantdataofPrivate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_AllSeparateBER_TLV
</UL>

<P><STRONG><a name="[178]"></a>_dat_bintobcd</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, data.o(i._dat_bintobcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _dat_bintobcd &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bytetobcd
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_AppSel
</UL>

<P><STRONG><a name="[ac]"></a>_dat_ultohex</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, emvpublic.o(i._dat_ultohex))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppMoveToTerminal
</UL>

<P><STRONG><a name="[b8]"></a>buildDOL</STRONG> (Thumb, 846 bytes, Stack size 456 bytes, appselect.o(i.buildDOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = buildDOL &rArr; CheckTagLen
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetUnknowTLV
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTagLen
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buildcdol1
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
</UL>

<P><STRONG><a name="[a]"></a>cEmvLib_AdviceProc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvif.o(i.cEmvLib_AdviceProc))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalAndCardActionAnalysis
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_OnlineProcessing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[6]"></a>cEmvLib_GetDateTime</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, emvif.o(i.cEmvLib_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = cEmvLib_GetDateTime &rArr; gettime_pboc &rArr; Lib_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bytetobcd
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettime_pboc
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_InitCAPKList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[d]"></a>cEmvLib_GetHolderOfflinePwd</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, emvif.o(i.cEmvLib_GetHolderOfflinePwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 2136<LI>Call Chain = cEmvLib_GetHolderOfflinePwd &rArr; Lib_PciOffLinePlainPin &rArr; EMVVerify &rArr; scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLinePlainPin
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciOffLineEncPin
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelayMs
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrBelow
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[c]"></a>cEmvLib_GetHolderPwd</STRONG> (Thumb, 166 bytes, Stack size 88 bytes, emvif.o(i.cEmvLib_GetHolderPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12548<LI>Call Chain = cEmvLib_GetHolderPwd &rArr; Lib_PciGetPin &rArr; TRANS_Sign &rArr; OnlineTransProc &rArr; ProcEmvTran &rArr; EmvLib_ProcTrans &rArr; EMV_CardholderVerification &rArr; PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PciGetPin
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelayMs
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing_EC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[7]"></a>cEmvLib_GetUnknowTLV</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, emvif.o(i.cEmvLib_GetUnknowTLV))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[9]"></a>cEmvLib_InputAmt</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, emvif.o(i.cEmvLib_InputAmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = cEmvLib_InputAmt &rArr; GetInputAmount &rArr; LCD_Display &rArr;  LCD_Display (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputAmount
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_DelayMs
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetTLV
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[8]"></a>cEmvLib_IoCtrl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvif.o(i.cEmvLib_IoCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[11]"></a>cEmvLib_OnlineProc</STRONG> (Thumb, 596 bytes, Stack size 80 bytes, emvif.o(i.cEmvLib_OnlineProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4080<LI>Call Chain = cEmvLib_OnlineProc &rArr; ReverseProc &rArr; SendRecvPacket &rArr; UpdateEmvDupFile &rArr; SaveReversalData &rArr; SaveLogFile &rArr; SaveVoidRecord &rArr; Lib_FlashMess_Save
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxnTableIndex
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileRemove
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjExitReversal
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCurrentTradeData
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseProc
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetCheckSim
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTradeData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentTraceNo
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AscToBcd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecvPacket
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PubDispString
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTLVItem
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnlineData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clss_transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[e]"></a>cEmvLib_ReferProc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, emvif.o(i.cEmvLib_ReferProc))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[b]"></a>cEmvLib_VerifyCert</STRONG> (Thumb, 456 bytes, Stack size 200 bytes, emvif.o(i.cEmvLib_VerifyCert))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = cEmvLib_VerifyCert &rArr; Api_DispString &rArr; Lib_ScrPrintf &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_LcdDrawBox
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetTLV
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[10]"></a>cEmvLib_VerifyPINOK</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, emvif.o(i.cEmvLib_VerifyPINOK))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = cEmvLib_VerifyPINOK &rArr; Api_DispString &rArr; Lib_ScrPrintf &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_LcdDrawBox
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[f]"></a>cEmvLib_WaitAppSel</STRONG> (Thumb, 200 bytes, Stack size 152 bytes, emvif.o(i.cEmvLib_WaitAppSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = cEmvLib_WaitAppSel &rArr; Api_DispString &rArr; Lib_ScrPrintf &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrCls
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DispString
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emvif.o(i.EmvFuncInit)
</UL>
<P><STRONG><a name="[382]"></a>creat</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, port.o(i.creat))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = creat
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FileOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[1a2]"></a>dat_BinToDisp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, appselect.o(i.dat_BinToDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dat_BinToDisp
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Conv_CharToDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[1a0]"></a>dat_asctobcd</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, emvport.o(i.dat_asctobcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dat_asctobcd
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeFun
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
</UL>

<P><STRONG><a name="[190]"></a>dat_bcdadd</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, emvport.o(i.dat_bcdadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dat_bcdadd &rArr; dat_bytetobcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bytetobcd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
</UL>

<P><STRONG><a name="[155]"></a>dat_bcdtoasc</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, emvport.o(i.dat_bcdtoasc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dat_bcdtoasc
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile1
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveLogFile
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPrintWantonlyTrade
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_TradeTicket
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintBatchTicket
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrestoreSweepCodeLogFile
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweepCodeInit
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_down_requt
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
</UL>

<P><STRONG><a name="[74]"></a>dat_bcdtobin</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, emvport.o(i.dat_bcdtobin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dat_bcdtobin
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_4bit
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;high_4bit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdadd
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdToBin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
</UL>

<P><STRONG><a name="[1a1]"></a>dat_bintobcd</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, entry.o(i.dat_bintobcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = dat_bintobcd &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bytetobcd
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
</UL>

<P><STRONG><a name="[38b]"></a>dat_bytetobcd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, emvport.o(i.dat_bytetobcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dat_bytetobcd &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetDateTime
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdadd
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dat_bintobcd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bintobcd
</UL>

<P><STRONG><a name="[c0]"></a>dat_hextoul</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, emvport.o(i.dat_hextoul))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dat_hextoul
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_TerminalRiskManagement
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAmountUl
</UL>

<P><STRONG><a name="[113]"></a>dat_ultohex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, emvport.o(i.dat_ultohex))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvBcdToBin
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
</UL>

<P><STRONG><a name="[27b]"></a>datebcdtobin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, emvpublic.o(i.datebcdtobin))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckDate
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>

<P><STRONG><a name="[2d4]"></a>disp_clss_err</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, qpboctran.o(i.disp_clss_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = disp_clss_err &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_WaitKey
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QProcEmvTran
</UL>

<P><STRONG><a name="[395]"></a>emv_InitFirst</STRONG> (Thumb, 166 bytes, Stack size 216 bytes, emvproc.o(i.emv_InitFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = emv_InitFirst &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_GetParam
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_SetParam
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
</UL>

<P><STRONG><a name="[2ed]"></a>emv_InitSystem</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, emvproc.o(i.emv_InitSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = emv_InitSystem &rArr; emv_InitFirst &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvFuncInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSetRun1
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRun1
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitFirst
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>gettime_pboc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, emvport.o(i.gettime_pboc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gettime_pboc &rArr; Lib_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetDateTime
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
</UL>

<P><STRONG><a name="[393]"></a>high_4bit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.high_4bit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
</UL>

<P><STRONG><a name="[c3]"></a>inserted_card</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, emvport.o(i.inserted_card))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inserted_card &rArr; Lib_IccDetect
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMagCardTrack
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCard
</UL>

<P><STRONG><a name="[1a4]"></a>lcd_disp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, emvport.o(i.lcd_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = lcd_disp &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdshow
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
</UL>

<P><STRONG><a name="[37e]"></a>lcdshow</STRONG> (Thumb, 504 bytes, Stack size 184 bytes, emvport.o(i.lcdshow))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = lcdshow &rArr; lcd_disp &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_disp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VlpBalFromIssuerAppData
</UL>

<P><STRONG><a name="[394]"></a>low_4bit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, emvport.o(i.low_4bit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtobin
</UL>

<P><STRONG><a name="[2]"></a>main</STRONG> (Thumb, 1224 bytes, Stack size 448 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 22448<LI>Call Chain = main &rArr; MianMenu &rArr; OtherMenu &rArr; TRANS_Void &rArr; AdjMACLogin &rArr; TRANS_Logon &rArr; TRANS_Batch &rArr; TRANS_Logoff &rArr; OperRegisterFuntion &rArr;  TRANS_Logon (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inserted_card
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emv_InitSystem
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermLockFuntion
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_Sale
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_AuTH
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDormancy_BacklightTime
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfSelected_Merchants_Inquiries
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSignNameSwitch
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePrintDegree
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetflashSection16
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetFlash
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParaInit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Los_ReadAppUpdataFlag
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_WNetTcpClose
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadAppVerInfor
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PrnGraySet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagSwiped
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagReset
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MagOpen
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbMute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbFlush
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccOpen
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccDetect
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetHW_VER
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashGet_Str
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_AppInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClear
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitName
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSignNameSwitch
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSaleSwitch
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPrintDegree
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPOSLockInfor
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyTone
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetICSaleSwitch
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDefaultTrade
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCAPKParam
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargingTips
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_flash_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_StandbyBrushCard
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_DStandbyScreen
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1a8]"></a>menumodle</STRONG> (Thumb, 672 bytes, Stack size 56 bytes, var.o(i.menumodle))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = menumodle &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MianMenu
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optional_Merchant_Menu_Processing
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRANS_RefundMenue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Management_Menu
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherMenu
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstSetRun1
</UL>

<P><STRONG><a name="[d3]"></a>my_printf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.my_printf))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetHolderPwd
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectListAID
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_ProcessRestrictions
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offlineCombinedDDA
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineStaticDataAuth
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDynamicData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoConstructAllSeparateBER_TLV
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InputAmt
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputAmtExt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvReadRecord
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvGetProcessingOptions
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__QPboc_CardAuth
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_InitApp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDynamicDataAuth
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EmvSelect
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Contactless_AnalysePSEDir
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_SetTransData
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_Proctrans
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_FinalSelect
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_AppSlt
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>

<P><STRONG><a name="[1ab]"></a>offlineCombineDSV</STRONG> (Thumb, 564 bytes, Stack size 856 bytes, terminalandcardaction.o(i.offlineCombineDSV))
<BR><BR>[Stack]<UL><LI>Max Depth = 3844<LI>Call Chain = offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Hash
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
</UL>

<P><STRONG><a name="[162]"></a>open</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.open))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
</UL>

<P><STRONG><a name="[188]"></a>s_EmvFuncInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, cllbckfunc.o(i.s_EmvFuncInit))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
</UL>

<P><STRONG><a name="[189]"></a>s_InitAppList</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvfile.o(i.s_InitAppList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = s_InitAppList
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
</UL>

<P><STRONG><a name="[18a]"></a>s_InitCAPKList</STRONG> (Thumb, 58 bytes, Stack size 312 bytes, emvfile.o(i.s_InitCAPKList))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = s_InitCAPKList &rArr; cEmvLib_GetDateTime &rArr; gettime_pboc &rArr; Lib_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_GetDateTime
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_Init
</UL>

<P><STRONG><a name="[354]"></a>scanCode</STRONG> (Thumb, 626 bytes, Stack size 360 bytes, tradeassistfun.o(i.scanCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = scanCode &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrClrLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatDataMoney
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUserAck1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontColr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_SetFontBlack
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Beep
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GunStart
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GunRead
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GunOver
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GunOpen
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GunOff
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSweepCodeTriggerWay
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGanDataLen
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
</UL>

<P><STRONG><a name="[c2]"></a>scc_close</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, emvport.o(i.scc_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scc_close &rArr; Lib_IccClose
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccClose
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispTradeInfo
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelTrans
</UL>

<P><STRONG><a name="[121]"></a>scc_command_APDU</STRONG> (Thumb, 250 bytes, Stack size 648 bytes, emvport.o(i.scc_command_APDU))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = scc_command_APDU &rArr; Lib_IccCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_IccCommand
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVVerify
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvSelect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvReadRecord
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetProcessingOptions
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGenerateAC
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVExternalAuthenticate
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVGetChallenge
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectSendToCard
</UL>

<P><STRONG><a name="[337]"></a>scc_select_slot</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, emvport.o(i.scc_select_slot))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectApp
</UL>

<P><STRONG><a name="[107]"></a>sel_mem</STRONG> (Thumb, 836 bytes, Stack size 136 bytes, menu.o(i.sel_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = sel_mem &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrPrintxy
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd234etClear
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_TimerCheck
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystermManageMenu
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeSwitch
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeQuery
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TradeContrl
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TermKeyManageMenu
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepParameterSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegisterMenu
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMenu
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Preauthorization
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pospara_download
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordMangeMenu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtherFunSetMenu
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownloadMenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationMenu
</UL>

<P><STRONG><a name="[366]"></a>set_byte</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, flash_oper.o(i.set_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_byte &rArr; Lib_FlashSet_Str
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_FlashSet_Str
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMS_Update
</UL>

<P><STRONG><a name="[101]"></a>sha4_finish</STRONG> (Thumb, 676 bytes, Stack size 40 bytes, sha4.o(i.sha4_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = sha4_finish &rArr; sha4_update &rArr; sha4_process
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_update
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
</UL>

<P><STRONG><a name="[ff]"></a>sha4_starts</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, sha4.o(i.sha4_starts))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
</UL>

<P><STRONG><a name="[100]"></a>sha4_update</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, sha4.o(i.sha4_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = sha4_update &rArr; sha4_process
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_process
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_finish
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Code_DigitVerify_Calculate
</UL>

<P><STRONG><a name="[352]"></a>sweepCodeInit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, p8583_trade.o(i.sweepCodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sweepCodeInit &rArr; dat_bcdtoasc
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_bcdtoasc
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_GetTime
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_posTophone
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_phoneTopos
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SweepCode_Query
</UL>

<P><STRONG><a name="[b4]"></a>toasc</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, dev_math.o(i.toasc))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToAsciiString
</UL>

<P><STRONG><a name="[67]"></a>tohex</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, dev_math.o(i.tohex))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Api_AscToBcd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiStrToBcd2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BcdToHex
</UL>

<P><STRONG><a name="[267]"></a>view_ver</STRONG> (Thumb, 358 bytes, Stack size 184 bytes, menu.o(i.view_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = view_ver &rArr; DspTile &rArr; Lib_MmiDisplay &rArr; Lib_ScrPrintxy &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUnitNum
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPosId
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ScrBackLight
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_MmiDisplay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Kbhit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_KbGetKey
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspTile
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadSN
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageMenu
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[397]"></a>byte_parity</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, emvproc.o(i.byte_parity))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
</UL>

<P><STRONG><a name="[1c7]"></a>get_random_number</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, emvproc.o(i.get_random_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_random_number &rArr; Lib_PEDGetRand &rArr; Pci_GetRnd
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_parity
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_PEDGetRand
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenMKAndEnc
</UL>

<P><STRONG><a name="[3a3]"></a>sha4_process</STRONG> (Thumb, 2800 bytes, Stack size 992 bytes, sha4.o(i.sha4_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = sha4_process
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha4_update
</UL>

<P><STRONG><a name="[37f]"></a>_CheckDate</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, emvpublic.o(i._CheckDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;datebcdtobin
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeDateYear
</UL>

<P><STRONG><a name="[d2]"></a>CheckDynamicData</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, offlinedataauth.o(i.CheckDynamicData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckDynamicData
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
</UL>

<P><STRONG><a name="[1f7]"></a>GetIssuerPK</STRONG> (Thumb, 232 bytes, Stack size 440 bytes, offlinedataauth.o(i.GetIssuerPK))
<BR><BR>[Stack]<UL><LI>Max Depth = 3428<LI>Call Chain = GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPINPK
</UL>

<P><STRONG><a name="[17f]"></a>OfflineDynamicDataAuth</STRONG> (Thumb, 454 bytes, Stack size 2384 bytes, offlinedataauth.o(i.OfflineDynamicDataAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 7548<LI>Call Chain = OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugTraceDisp
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVInternalAuthenticate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buildDOL
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
</UL>

<P><STRONG><a name="[180]"></a>OfflineStaticDataAuth</STRONG> (Thumb, 836 bytes, Stack size 1392 bytes, offlinedataauth.o(i.OfflineStaticDataAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 4380<LI>Call Chain = OfflineStaticDataAuth &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindRevocList
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_FindCAPK
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVSignVeri
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckStaticData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
</UL>

<P><STRONG><a name="[17d]"></a>offlineCombinedDDA</STRONG> (Thumb, 52 bytes, Stack size 264 bytes, offlinedataauth.o(i.offlineCombinedDDA))
<BR><BR>[Stack]<UL><LI>Max Depth = 5428<LI>Call Chain = offlineCombinedDDA &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_CardAuth
</UL>

<P><STRONG><a name="[11c]"></a>DeleteFromtSortAppList</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, appselect.o(i.DeleteFromtSortAppList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DeleteFromtSortAppList &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelectForLog
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinalSelect
</UL>

<P><STRONG><a name="[18f]"></a>TruncatePad</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, appselect.o(i.TruncatePad))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TruncatePad
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmvLib_ReadAppData
</UL>

<P><STRONG><a name="[38a]"></a>FindRedundantdataofPrivate</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, entry.o(i.FindRedundantdataofPrivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FindRedundantdataofPrivate
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>

<P><STRONG><a name="[389]"></a>FindRedundantdataofUndefined</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, entry.o(i.FindRedundantdataofUndefined))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FindRedundantdataofUndefined
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_NoConstructAllSeparateBER_TLV
</UL>

<P><STRONG><a name="[19e]"></a>TermOnline</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, entry.o(i.TermOnline))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_PreTransProc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Entry_GetPreProcInterFlg
</UL>

<P><STRONG><a name="[2ce]"></a>CheckSFI</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, qpboc.o(i.CheckSFI))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckSFI
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckAllSFI
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
</UL>

<P><STRONG><a name="[27d]"></a>OfflineDynamicDataAuth</STRONG> (Thumb, 298 bytes, Stack size 1088 bytes, qpboc.o(i.OfflineDynamicDataAuth))
<BR><BR>[Stack]<UL><LI>Max Depth = 6252<LI>Call Chain = OfflineDynamicDataAuth &rArr; GetIccPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIccPK
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cl_EMVSignVeri
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__QPboc_CardAuth
</UL>

<P><STRONG><a name="[2d1]"></a>TruncatePad</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, qpboc.o(i.TruncatePad))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TruncatePad
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QPboc_ReadAppData
</UL>

<P><STRONG><a name="[340]"></a>SeparateScript</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, terminalandcardaction.o(i.SeparateScript))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SeparateScript &rArr; SeparateBER_TLV
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeparateBER_TLV
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnlineProcessing
</UL>

<P><STRONG><a name="[375]"></a>TerminalAction</STRONG> (Thumb, 408 bytes, Stack size 72 bytes, terminalandcardaction.o(i.TerminalAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 4460<LI>Call Chain = TerminalAction &rArr; ForcedOnline &rArr; offlineCombineDSV &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildTDOL
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForcedOnline
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;somememcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TerminalAndCardActionAnalysis
</UL>

<P><STRONG><a name="[376]"></a>somememcmp</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, terminalandcardaction.o(i.somememcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = somememcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcIssuerDef
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalAction
</UL>

<P><STRONG><a name="[bf]"></a>CalcAmountUl</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, cardholderverify.o(i.CalcAmountUl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CalcAmountUl &rArr; dat_hextoul
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_hextoul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCVMCondition
</UL>

<P><STRONG><a name="[d0]"></a>CheckCVMCondition</STRONG> (Thumb, 438 bytes, Stack size 56 bytes, cardholderverify.o(i.CheckCVMCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CheckCVMCondition &rArr; CalcAmountUl &rArr; dat_hextoul
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dat_hextoul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAmountUl
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
</UL>

<P><STRONG><a name="[15b]"></a>PerformCVM</STRONG> (Thumb, 610 bytes, Stack size 32 bytes, cardholderverify.o(i.PerformCVM))
<BR><BR>[Stack]<UL><LI>Max Depth = 6876<LI>Call Chain = PerformCVM &rArr; _OfflinePINProcessing &rArr; GetIccPINPK &rArr; GetIssuerPK &rArr; EMVSignVeri &rArr; FromTimeToY4MMDD &rArr; _ChangeDateYear &rArr; _CheckDate &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_printf
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyPINOK
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cEmvLib_VerifyCert
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OfflinePINProcessing
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnlinePINProcessing
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignatureProcessing
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMV_CardholderVerification
</UL>

<P><STRONG><a name="[29f]"></a>SignatureProcessing</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, cardholderverify.o(i.SignatureProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SignatureProcessing
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMVIF_PrintSignature
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PerformCVM
</UL>

<P><STRONG><a name="[38c]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[385]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[38f]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[38e]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[15]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[14]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
